/*!
 * Squarespace Universal Filter - Filter any data on your site
 * Author: Michael Mashay <michael@squarespacewebsites.com>
 * License: Commercial License
 */
! function() {
    function t(t, e, i) {
        if (!document.getElementById(e)) {
            var s = document.createElement("style");
            s.type = "text/css", s.id = e, s.styleSheet ? s.styleSheet.cssText = t : s.appendChild(document.createTextNode(t)), i.appendChild(s)
        }
    }

    function e(t) {
        for (var e, i, s = t.length; 0 !== s;) i = Math.floor(Math.random() * s), e = t[s -= 1], t[s] = t[i], t[i] = e;
        return t
    }

    function i(t, e) {
        var i = [],
            s = [];
        for (t.replace(/(\d+)|(\D+)/g, function(t, e, s) {
                i.push([e || 1 / 0, s || ""])
            }), e.replace(/(\d+)|(\D+)/g, function(t, e, i) {
                s.push([e || 1 / 0, i || ""])
            }); i.length && s.length;) {
            var a = i.shift(),
                r = s.shift(),
                n = a[0] - r[0] || a[1].localeCompare(r[1]);
            if (n) return n
        }
        return i.length - s.length
    }

    function s(t, e) {
        return t = t.toString(), e || (t = t.toLowerCase().replace(/\'/g, "-").replace(/\"/g, "-").replace(/\#/g, "-")), t.replace(/\s+/g, "-").replace(/\-\-+/g, "-").replace(/\W/g, "-").replace(/\&/g, "and").replace(/\//g, "-").replace(/\:/g, "-").replace(/\;/g, "-").replace(/^-+/, "").replace(/-+$/, "")
    }

    function a(t, e, i) {
        var s;
        return function() {
            var a = this,
                r = arguments,
                n = i && !s;
            clearTimeout(s), s = setTimeout(function() {
                s = null, i || t.apply(a, r)
            }, e), n && t.apply(a, r)
        }
    }

    function r(t) {
        var e = window.sessionStorage;
        if (!t || !e) return !1;
        try {
            var i = JSON.parse(e.getItem("universal-filter-" + t)),
                s = (new Date).getTime();
            return !(i && !i.created || i && i.created && s - i.created > 6e5) && i
        } catch (t) {
            return console.log(t), !1
        }
    }

    function n(t, e) {
        var i = window.sessionStorage;
        if (t && i) try {
            t.created = (new Date).getTime();
            var s = JSON.stringify(t);
            s.length < 4e6 && i.setItem("universal-filter-" + e, s)
        } catch (t) {
            console.log(t)
        }
    }

    function o() {
        window._scrollBarWidth = window.innerWidth && document.body && document.body.offsetWidth ? window.innerWidth - document.body.offsetWidth : 0, m && clearTimeout(m), m = setTimeout(function() {
            v && v.length && v.forEach(function(t) {
                t.isotope && t.isotope.layout(), t.items.each(function(t) {
                    t.hasClass("element-hidden") || t.all("img").each(function(t) {
                        t.fire("refresh")
                    })
                })
            }), C && console.log("sync"), C && console.log("resize"), m = null
        }, 200)
    }

    function l(t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t[i] && "object" == typeof e[i] ? l(t[i], e[i]) : t[i] = e[i]);
        return t
    }

    function c(t) {
        if (t && t.container && t.items) {
            var e = Y.all(t.container),
                i = e.size();
            if (i) {
                var s = "Container: " + t.container + "\nItems: " + t.items;
                if (t.settings && t.settings.isotope && t.settings.isotope.enabled && (s = s + "\nIsotope: " + JSON.stringify(t.settings.isotope)), function(t) {
                        try {
                            var e = Static && Static.SQUARESPACE_CONTEXT,
                                i = {
                                    pluginName: "Universal Filter",
                                    pluginPage: e && e.website.baseUrl ? e.website.baseUrl + location.pathname : location.href,
                                    pageTitle: document.title,
                                    pluginData: t || "No plugin data",
                                    siteTitle: e && e.website.siteTitle || "",
                                    siteUrl: e && e.website.baseUrl || location.origin
                                },
                                s = new XMLHttpRequest;
                            s.open("POST", "https://tools.squarewebsites.org/api/sqs-plugins", !0), s.setRequestHeader("Content-Type", "application/json;charset=UTF-8"), s.send(JSON.stringify(i))
                        } catch (t) {
                            console.log(t)
                        }
                    }(s), window.customFiltersInitInterval) {
                    var a = 0;
                    p = setInterval(function() {
                        if (a >= i) window.clearInterval(p), p = null, C && console.log("customFilters built");
                        else {
                            var s = e.item(a);
                            (s.ancestor(".sqs-block-summary-v2") || s.ancestor(".sqs-block-gallery")) && (s = s.ancestor(".sqs-block")), s.hasClass("custom-filter-container") || (t.index = a, s.CustomFilter = new g(s, t), v.push(s.CustomFilter))
                        }
                        a++
                    }, window.customFiltersInitInterval)
                } else e.each(function(e, i) {
                    (e.ancestor(".sqs-block-summary-v2") || e.ancestor(".sqs-block-gallery")) && (e = e.ancestor(".sqs-block")), e.hasClass("custom-filter-container") || (t.index = i, e.CustomFilter = new g(e, t), v.push(e.CustomFilter))
                })
            }
        }
    }

    function d(t, e) {
        return t = t.replace(/{{(\w+)}}/g, function(t, i) {
            return e && e.hasOwnProperty(i) ? e[i] : "auto"
        })
    }

    function g(t, e) {
        if (t) {
            this.target = l({
                container: ".ProductList",
                items: ".hentry",
                settings: {
                    urlQuery: !0,
                    showItemsCount: !0,
                    requestAttrWithAjax: !0,
                    useSessionCache: !1,
                    closeOptionsOnSelect: !0,
                    closeOnOverScroll: !0,
                    updateFilterOptions: {
                        enabled: !0,
                        nonExistOptions: {
                            hide: !1,
                            disable: !1,
                            disableHard: !1,
                            moveBottom: !1
                        },
                        showOptionsCounters: !1,
                        optionsCounterWrap: "- ()"
                    },
                    pagination: {
                        enabled: !1,
                        pageSize: 100,
                        place: "bottom",
                        backgroundColor: "transparent",
                        margin: "3% 0",
                        padding: "0",
                        align: "center",
                        loadMoreButton: {
                            enabled: !1,
                            text: "Load more...",
                            alignment: "center",
                            size: "small"
                        },
                        showPrevNext: {
                            next: "Next",
                            prev: "Prev"
                        },
                        items: {
                            style: "square",
                            width: "32px",
                            margin: "20px",
                            borderWidth: "2px",
                            backgroundColor: "#fff",
                            activeBackgroundColor: "#555",
                            color: "#000",
                            activeColor: "#fff"
                        }
                    },
                    mobilePanel: {
                        enabled: !0,
                        triggerButtonName: "Filter",
                        closeOnSelect: !0
                    },
                    clearAllButton: {
                        enabled: !1,
                        text: "Clear All",
                        place: "before"
                    },
                    position: "top",
                    align: "left",
                    keepDropdownsOpen: !1,
                    initState: {},
                    itemsCount: {
                        positionOrder: 1
                    },
                    simpleFilter: {
                        anim: !0,
                        layoutAnim: !1,
                        show: {
                            effect: "scale",
                            transitionDuration: 1200,
                            stagger: 16,
                            easing: "ease-in-out"
                        },
                        hide: {
                            effect: "scale",
                            transitionDuration: 200,
                            stagger: 36,
                            easing: "ease-in-out"
                        }
                    },
                    isotope: {
                        enabled: !1,
                        transitionDuration: 300
                    },
                    mixitup: {
                        enabled: !1,
                        transitionDuration: 300
                    },
                    excludeFilter: "Category",
                    sort: {
                        enabled: !0,
                        title: "Sort",
                        positionOrder: 99,
                        items: []
                    },
                    filter: {
                        enabled: !0,
                        items: [],
                        category: {
                            positionOrder: 2,
                            main: "categoriesDropdown",
                            name: "Category",
                            sort: "asc",
                            getAttr: "categories",
                            multiple: !0,
                            strict: !0,
                            hideDefaultLabelIfDirty: !1,
                            showAll: !1
                        },
                        tag: {
                            positionOrder: 3,
                            main: "tagsDropdown",
                            name: "Tag",
                            sort: "asc",
                            getAttr: "tags",
                            multiple: !0,
                            strict: !0,
                            hideDefaultLabelIfDirty: !1,
                            showAll: !1
                        }
                    },
                    search: {
                        positionOrder: 100,
                        text: "Search",
                        minLength: 1,
                        customSearchFunc: !1,
                        timeout: 400,
                        searchFunc: function(t) {
                            return (t = t._node ? t._node : t).textContent.trim()
                        },
                        enabled: !0
                    }
                }
            }, e), this.container = t, this._init()
        }
    }

    function h() {
        b = b || window.Y.one("body");
        try {
            window.customFilterSettings || (window.customFilterSettings = {
                targets: [{
                    container: ".ProductList,.collection-type-products.view-list .main-content",
                    items: ".hentry",
                    settings: {
                        sort: {
                            enabled: !0,
                            items: [{
                                name: "Price",
                                order: "asc|desc"
                            }]
                        }
                    }
                }]
            }), window.customFilterSettings && (window.customFilterSettings.targets && window.customFilterSettings.targets.length && (C && console.log("find target"), window.customFilterSettings.targets.forEach(function(t) {
                t.settings ? t.settings.runOnDOMReady ? Y.once("domready", function() {
                    c(t)
                }) : t.settings.runDelay ? setTimeout(function() {
                    c(t)
                }, t.settings.runDelay) : c(t) : console.log("No Settings")
            }), function() {
                var t = document.createEvent("HTMLEvents");
                t.initEvent("resize", !0, !1), window.dispatchEvent(t)
            }()), f = Y.Global.on("advanced-maps:initialized", function(t) {
                if (t) {
                    var e = t.parentNode && t.parentNode.className && t.parentNode.className.indexOf("map-block") > -1 ? t.parentNode.id : "";
                    v && v.length && v.forEach(function(i) {
                        e && i.advancedMap && i.target.settings.advancedMap && i.target.settings.advancedMap.advancedMapContainer && (t._map_data && (!i.coll_data || !i.coll_data.items || i.coll_data.items.length < t._map_data.length) && (i.coll_data.items = t._map_data), i._addItemsAttributes(), i._checkInitState(), i._sortGrid())
                    })
                }
            }), window.addEventListener("resize", o, !1), window.addEventListener("scroll", function() {
                u && clearTimeout(u), u = setTimeout(function() {
                    v && v.length && v.forEach(function(t) {
                        t.container._node.getBoundingClientRect().top < 10 && t.target.settings.closeOnOverScroll && (t.container.hasClass("mobile-panel-open") || (t.customFiltersWrapper.all(".archive-dropdown-toggle-checkbox").set("checked", !1), t.searchContainer && t.searchContainer.removeClass("active")))
                    }), u = null
                }, 60)
            }, !1))
        } catch (t) {
            console.warn(t)
        }
    }
    var m, u, p, f, v = [],
        b = Y.one("body"),
        C = !1;
    Object.size = function(t) {
        var e, i = 0;
        for (e in t) t.hasOwnProperty(e) && i++;
        return i
    }, g.prototype = {
        addVirtualItems: function(t, e) {
            e && e.length && (this.coll_data.items = e), t && t.addClass("custom-filter-grid-item"), this.virtual_list = this.virtual_list && this.virtual_list.size() ? this.virtual_list.concat(t) : t && t.size() ? t : this.container.all(this.target.items), this._addItemsAttributes(!1, this.virtual_list), this._buildDropdowns(), this._sortGrid()
        },
        loadImages: function(t) {
            var e = this;
            t = t || this.items;
            var i = e.container.hasClass("isotope-filter-used");
            t && t.size && t.each(function(t) {
                t.hasClass("element-hidden") || t.all("img").each(function(t) {
                    var s = t.get("parentNode"),
                        a = "none";
                    s && (s.hasClass("content-fill") || t.ancestor(".index-gallery") || t.ancestor(".product-image") || t.ancestor(".ProductList-innerImageWrapper") ? a = "fill" : s.hasClass("content-fit") && (a = "fit"));
                    var r = function() {
                        t.ancestor(".ProductList-item") && t.ancestor(".ProductList-item").addClass("image-is-loaded")
                    };
                    e.config && e.config.imageAspectRatio && "autocolumns" !== e.config.design && (!s || s._node.style.paddingBottom || s.hasClass("sqs-video-overlay") || s.setStyles({
                        paddingBottom: 100 / parseFloat(e.config.imageAspectRatio) + "%"
                    }));
                    var n = t.ancestor(".sqs-video-wrapper");
                    if (n) n.videoloader ? n.videoloader.fire("refresh") : (n.plug(Y.Squarespace.VideoLoader), n.videoloader.fire("refresh"));
                    else if (t.hasClass("loaded") || t._node.addEventListener("load", function() {
                            this.classList.add("loaded"), t.fire("refresh"), r()
                        }, !1), t.loader) t.width() ? !i && t.fire("refresh") : t.loader.load();
                    else {
                        if (t.ancestor(".BlogList-item-image-link") && window.Static && window.Static.SQUARESPACE_CONTEXT && window.Static.SQUARESPACE_CONTEXT.tweakJSON) {
                            var o = "stacked" === window.Static.SQUARESPACE_CONTEXT.tweakJSON["tweak-blog-list-style"].toLowerCase(),
                                l = "auto" === window.Static.SQUARESPACE_CONTEXT.tweakJSON["tweak-blog-list-item-image-aspect-ratio-stacked"].toLowerCase();
                            if (o && l) {
                                var c = t._node;
                                c.style.position = null, c.style.top = null, c.style.right = null, c.style.bottom = null, c.style.left = null, c.style.width = null, c.style.height = null, a = null
                            } else a = "fill"
                        }
                        t._no_loader || (t._no_loader = 1), t._no_loader++, t._no_loader >= 3 && ImageLoader.load(t, {
                            load: !0,
                            mode: a
                        })
                    }
                    if (t.hasClass("loaded") && t.getAttribute("src") && 0 == t._node.style.opacity && t._node.className && -1 == t._node.className.indexOf("--alt") && (t._node.style.opacity = 1, r()), e.target.settings.performanceMode) {
                        var d = t.getAttribute("data-src"),
                            g = t.getAttribute("src");
                        d && !g && (t._node.addEventListener("load", function() {
                            this.classList.add("loaded")
                        }, !1), t.setStyles({
                            position: "absolute",
                            height: "100%",
                            objectFit: "cover"
                        }).setAttribute("src", d))
                    }
                })
            })
        },
        addItems: function(t) {
            this.items = this.items && this.items.size() ? this.items.concat(t) : t && t.size() ? t : this.container.all(this.target.items);
            if (!this.itemsParent && this.items.size() && (this.itemsParent = this.items.item(0).get("parentNode"), this.itemsParent && this.itemsParent.addClass("custom-filter-grid")), Y.fire("custom-filter-items-added", this.container), this.container.fire && this.container.fire("custom-filter:items-added", {
                    customFilter: this
                }), this.filterAnim = !1, this.waitingForNewItems, this.waitingForNewItems = !1, this.isotope) {
                var e = this.isotope.options.transitionDuration;
                if (this.isotope.once("layoutComplete", function(i) {
                        setTimeout(function() {
                            t.each(function(t) {
                                t.all("img").each(function(t) {
                                    t.fire("refresh")
                                })
                            })
                        }, e)
                    }), t && t.size()) {
                    var i = this.isotope_item_width ? this.isotope_item_width : this.target.settings.isotope.columnWidth ? this.target.settings.isotope.columnWidth : this.config ? this.config.columnWidth : t.item(0).get("outerWidth");
                    t.each(function(t) {
                        t.setStyles({
                            maxWidth: i,
                            width: "100%",
                            top: null,
                            left: null,
                            visibility: "visible",
                            float: "left"
                        })
                    }), this.isotope.reloadItems(), this.isotope.layout(), this._sortGrid()
                }
            } else this.mixitup ? (this.mixitup.forceRefresh(), this._sortGrid()) : this._sortGrid();
            this.target.settings.advancedMap && this.target.settings.advancedMap.activateMarkerInfoOnItemClick && this.advancedMap && Y.SQS.Gallery.Manager && Y.SQS.Gallery.Manager.unlightboxify(this.items)
        },
        _buildPagination: function(e) {
            var i = this,
                s = i.target.settings.pagination,
                a = e.size() / s.pageSize;
            if (this.paginationClicked || (this.pagination_num = 1), i.itemsCount && i.itemsCount.one(".items-count").setAttribute("data-pagination", ""), this.target.settings.pagination.enabled) {
                if (a > 1) {
                    if (this.container.one(".pagination-block")) i.pagination && i.pagination.empty();
                    else {
                        s.guid = i.target.index, this.pagination = Y.Node.create('<nav class="pagination-block pagination-block-custom-filter-' + s.guid + ' pagination-block-plugin clear"></nav>'), s.items && (s.items.guid = s.guid, s.items.style && this.pagination.addClass("style-" + s.items.style));
                        try {
                            s.items.lineHeight = parseFloat(s.items.width) - 2 * parseFloat(s.items.borderWidth), isNaN(s.items.lineHeight) ? s.items.lineHeight = s.items.width : s.items.lineHeight += "px"
                        } catch (t) {
                            s.items.lineHeight = s.items.width
                        }
                        t(d(".pagination-block.pagination-block-custom-filter-{{guid}} {margin:{{margin}};padding:{{padding}};background-color:{{backgroundColor}};text-align:{{align}}}", s) + d(".pagination-block.pagination-block-custom-filter-{{guid}} .pagination-item{cursor:pointer;padding-bottom:5px;margin-right:{{margin}}}.pagination-block.pagination-block-custom-filter-{{guid}} .pagination-item a{border-width:{{borderWidth}};border-color:{{color}};height:{{width}};width:{{width}};line-height:{{lineHeight}};background-color:{{backgroundColor}};color:{{color}}}.pagination-block-custom-filter-{{guid}} .pagination-item.active a,.pagination-block-custom-filter-{{guid}} .pagination-item:hover a{background-color:{{activeBackgroundColor}};color:{{activeColor}};border-color:{{activeBackgroundColor}}}", s.items), "paginationStylesPlugin-" + s.guid, i.container._node), t(".pagination-block-plugin.loadMore-used .pagination-item{display:none}.pagination-block-plugin{margin:3% 0;clear:both;box-sizing:border-box;display:inline-block;width:100%}.pagination-item a{border:none;display:block;white-space:nowrap;text-align:center;padding:0;margin:0;border-width:2px;border-style: solid;transition:all .1s linear;-webkit-transition:all .1s linear}.pagination-block-plugin.style-circle .pagination-item a{border-radius:50%}.pagination-block-plugin.style-pillow .pagination-item a{border-radius:4px}.pagination-block-plugin .pagination-item:last-child{margin:0!important}.pagination-block-plugin .pagination-item{display:inline-block;margin-right:16px;overflow:hidden;vertical-align:middle}", "paginationStylesPlugin", document.body);
                        var r = this.container.one(".sqs-gallery-container");
                        r && r.addClass("clear");
                        var n = r || this.container.one(".custom-filter-grid");
                        s.place && "top" === s.place.trim() ? n.insert(this.pagination, "before") : n.insert(this.pagination, "after")
                    }
                    for (var o = 1; o < a + 1; o++) i.pagination && i.pagination.append('<div class="pagination-item pagination-item-' + o + '"><a data-index="' + o + '">' + o + "</a></div>");
                    if (s.loadMoreButton && s.loadMoreButton.enabled && (this.pagination.addClass("loadMore-used"), !this.container.one(".pagination-loadMore-button"))) {
                        this.loadMoreButton = Y.Node.create(d('<div class="sqs-block-button sqs-block pagination-loadMore-button"><div class="sqs-block-button-container--{{alignment}}" data-alignment="{{alignment}}"><button class="sqs-block-button-element--{{size}} sqs-block-button-element">{{text}}</button></div></div>', s.loadMoreButton)), this.pagination.append(this.loadMoreButton)
                    }
                } else i.pagination_num = 1, i.pagination && i.pagination.remove(), i.pagination = null;
                if (this.pagination_num && this.pagination) {
                    this.pagination.all(".active").removeClass("active");
                    var l = this.pagination.one(".pagination-item-" + this.pagination_num);
                    l && l.addClass("active");
                    var c = e.size();
                    if (e.size() > s.pageSize) {
                        var g = (this.pagination_num - 1) * s.pageSize,
                            h = s.pageSize + g > e.size() ? e.size() : s.pageSize + g;
                        e.each(function(t, e) {
                            (e < g || e >= h) && i.hidden.push(t)
                        }), s.loadMoreButton && s.loadMoreButton.enabled ? e._nodes = e._nodes.slice(0, h) : e._nodes = e._nodes.slice(g, h);
                        var m = c - h;
                        this.loadMoreButton && (g = 0), i.itemsCount && i.itemsCount.one(".items-count").setAttribute("data-pagination", "(" + g + " - " + h + ")"), this.loadMoreButton && this.loadMoreButton.one(".sqs-block-button-element").setAttribute("data-size", m), m < 1 && this.loadMoreButton && this.loadMoreButton.hide(!0)
                    }
                }
            }
            return this.paginationClicked = !1, e
        },
        _init: function() {
            if (!Y.one('link[href*="custom-filter/custom-filter.min.css"]') && Y.Get && -1 === location.hostname.indexOf("squarewebsites.org") && Y.Get.css("https://assets.squarewebsites.org/custom-filter/custom-filter.min.css"), this.items = this.target.items && this.container.one(this.target.items) ? this.container.all(this.target.items) : new Y.NodeList, this.existedItems = this.target.items && this.container.one(this.target.items) ? this.container.all(this.target.items) : new Y.NodeList, (this.container.hasClass("BlogList") || this.container.hasClass("sqs-blog-list")) && (this.container = this.container.get("parentNode")), this.container.get("parentNode") && this.container.get("parentNode").hasClass("custom-filter-container")) console.log("Hey, seems Filter initialized in Parent Node");
            else {
                this.config = !!this.container.getAttribute("data-block-json") && JSON.parse(this.container.getAttribute("data-block-json")), this.scrollEl = Y.one(document.scrollingElement) || Y.one(Y.UA.gecko || Y.UA.ie || navigator.userAgent.match(/Trident.*rv.11\./) ? "html" : "body"), this.first_sort_run = !1, Y.one("#categoryNav") && Y.one("#categoryNav").hide();
                var i = this,
                    a = ["custom-filter-container", "custom-filter-new-ver"];
                i.filterAnim = !1, this.items.size() && (this.items.each(function(t, e) {
                    !t.hasAttribute("data-start-index") && t.setAttribute("data-start-index", e)
                }), this.items.addClass("custom-filter-grid-item"), this.itemsParent = this.items.item(0).get("parentNode"), this.target.settings.shuffle && (this.items._nodes = e(this.items._nodes), setTimeout(function() {
                    i._addItemsAttributes(!0)
                }, 0))), this.container.LazySummariesData && this.container.LazySummariesData.enableLazy && !this.container.LazySummariesData.loadAllOrPag && (this.target.settings.pagination.enabled = !0, this.target.settings.pagination.pageSize = this.container.LazySummariesData.pageSize, this.target.settings.pagination.align = "center", this.target.settings.pagination.place = "bottom", this.target.settings.pagination.loadMoreButton = {
                    enabled: !0,
                    text: this.container.LazySummariesData.loadMoreText,
                    alignment: "center",
                    size: "small"
                });
                var o = !0;
                if (this.container.hasClass("summary-v2-block") && this.container.one(".summary-item-list") && (this.container.one(">.sqs-block-content").addClass("custom-filter-grid"), this.itemsParent = this.container.one(".summary-item-list"), o = !1), this.target.settings.itemsParent && (this.itemsParent = this.container.one(this.target.settings.itemsParent)), this.itemsParent && o && this.itemsParent.addClass("custom-filter-grid"), this._initFilterPosition(), this.currentCats = [], this.currentTags = [], this.collectionUrl = this.target.settings.collectionUrl, this.getFilterAttrObj = {}, this.getRangesAttrObj = {}, this.filterParams = {}, this.items_prices = [], this.pagination_num = 1, this.sortObj = {
                        index: "[data-index] parseInt",
                        index_desc: "[data-index] parseInt"
                    }, this.target.settings.performanceMode && a.push("performance-mode-used"), this.config && !this.target.settings.collectionUrl && (this.collectionUrl = this.config.collectionUrl ? this.config.collectionUrl : this.container.one(".summary-title-link") ? "/" + this.container.one(".summary-title-link").get("pathname").split("/")[1] : this.container.one(".summary-thumbnail-container") ? "/" + this.container.one(".summary-thumbnail-container").get("pathname").split("/")[1] : location.pathname, this.config.filter && (this.config.filter.tag || this.config.filter.category) && (this.collectionUrl += this.config.filter.category ? "?category=" + this.config.filter.category.trim() : "?", this.collectionUrl += this.config.filter.tag ? "&tag=" + this.config.filter.tag.trim() : "")), this.collectionUrl = this.collectionUrl ? encodeURI(this.collectionUrl) : location.pathname, this.customFiltersWrapper = Y.Node.create('<div class="customFiltersWrapper clearfix clear"><div class="customFiltersContainer"><div style="display:none!important" class="sqs-block reset-first-sqs-block hidden" hidden="true"><span hidden="true"></span></div></div><button class="mobile-panel-close" style="opacity:0"></button><div style="display:none!important" class="sqs-block reset-last-sqs-block hidden" hidden="true"><span hidden="true"></span></div></div>'), this.customFilters = this.customFiltersWrapper.one(".customFiltersContainer"), this.searchRegex = "", this.filter_selectors = "", this.sort_param = "index", this.container.fire && this.container.fire("custom-filter:filter-before-init", {
                        customFilter: i
                    }), Y.fire("custom-filter:filter-before-init", {
                        customFilter: i
                    }), this.target.settings.showItemsCount) {
                    var l = parseInt(this.target.settings.itemsCount.positionOrder);
                    this.itemsCount = Y.Node.create('<div class="items items-count-wrapper sqs-block" data-pos-order="' + l + '"><div class="sqs-block-content"><div class="items-count-inner">Items: <span class="items-count">' + this.items.size() + "</span></div></div></div>"), this.customFilters.append(this.itemsCount)
                }
                var c = this.target.settings.view || "dropdowns";
                if (a.push("custom-filter-view-" + c), this.target.settings.filter.enabled && ((this.target.settings.filter.category || this.target.settings.filter.tag) && (this.target.settings.filter.items || (this.target.settings.filter.items = []), this.target.settings.filter.tag && (this.target.settings.filter.tag.main || (this.target.settings.filter.tag = {}), this.target.settings.filter.tag.main = "tagsDropdown", this.target.settings.filter.tag.name = "Tags", this.target.settings.filter.tag.subName = "tag", this.target.settings.filter.items[0] && "tagsDropdown" === this.target.settings.filter.items[0].main || this.target.settings.filter.items.unshift(this.target.settings.filter.tag)), this.target.settings.filter.category && (this.target.settings.filter.category.main || (this.target.settings.filter.category = {}), this.target.settings.filter.category.main = "categoriesDropdown", this.target.settings.filter.category.subName = "category", this.target.settings.filter.category.name = "Categories", this.target.settings.filter.items[0] && "categoriesDropdown" === this.target.settings.filter.items[0].main || this.target.settings.filter.items.unshift(this.target.settings.filter.category))), this.target.settings.filter && this.target.settings.filter.items && this.target.settings.filter.items.length && this.target.settings.filter.items.forEach(function(t, e) {
                        if (t.name) {
                            var a = t.name.trim(),
                                r = parseInt(t.positionOrder) || 4 + e,
                                n = s(t.subName ? t.subName : a);
                            i.filterParams[n] || (i.filterParams[n] = []);
                            var o = t.main || "name-" + s(a, !0),
                                l = t.defined || !1,
                                c = t.getAttr ? t.getAttr : "",
                                d = !1;
                            c && (c + "").indexOf("variant|") > -1 && (d = c.split("|")[1], c = function(t, e) {
                                var i = [],
                                    s = !!t && t.variants;
                                return s && s.length && (i = Y.Array.map(s, function(t) {
                                    return t.attributes[e] || ""
                                })), i
                            });
                            var g = t.allOption || "all",
                                h = t.allowedOptions || [],
                                m = t.allowedPrefSuf || "",
                                u = null;
                            if (h.length && t.sort && "asAllowed" === t.sort) {
                                u = {};
                                for (var p = 0, f = h.length; p < f; p++) u[h[p]] = p
                            }
                            var v = t.hidden ? " hidden" : "",
                                b = t.hideDefaultLabelIfDirty ? " hide-def-label" : "",
                                C = !t.logic || "and" !== t.logic.trim() && "or" !== t.logic.trim() ? "and" : t.logic.trim(),
                                w = !t.multipleLogic || "and" !== t.multipleLogic.trim() && "or" !== t.multipleLogic.trim() ? "or" : t.multipleLogic.trim(),
                                _ = t.children || "",
                                y = !!t.checkChildren || !1,
                                F = t.defaultAttrs || "",
                                O = !t.hasOwnProperty("strict") || !!t.strict,
                                k = !!t.multiple,
                                x = t.hideTitle ? "hidden" : "",
                                A = t.initText ? 'data-init-text="' + t.initText + '"' : "",
                                S = s(a) + "-target-" + i.target.index + "-" + (new Date).getTime(),
                                P = Y.Node.create('<div class="sqs-block archive-block sqs-block-archive filterDropdown ' + o + " " + v + b + '" data-pos-order="' + r + '" data-multiple-logic="' + w + '" data-logic="' + C + '" data-children="' + _ + '" data-check-children="' + y + '" data-defined="' + l + '" data-multiple="' + k + '" data-strict="' + O + '" data-filter="' + n + '"><div class="sqs-block-content"><div class="archive-block-wrapper archive-block-setting-layout-dropdown archive-block-setting-text-alignment-left archive-block-setting-multicolumns"><input class="archive-dropdown-toggle-checkbox" id="dropdown-filter-' + S + '" type="checkbox"><label class="archive-dropdown-toggle-label" for="dropdown-filter-' + S + '"><span class="archive-dropdown-toggle-title ' + x + '"' + A + '><span class="defaultLabel"><span>' + a + '</span></span><span class="filterValues"></span><span class="reset-button icn-cancel"></span></span><span class="icn-down-open"></span></label><ul class="archive-group-list"></ul></div></div></div>'),
                                I = t.options || [];
                            t.showAll && -1 === I.indexOf("All") && I.unshift("All"), i.getFilterAttrObj[n] ? console.warn(n + " - method already exists in getFilterAttrObj") : i.getFilterAttrObj[n] = {
                                attr: c,
                                variantOption: d,
                                logic: C,
                                lowercase: !!t.lowercase,
                                multiple: k,
                                multipleLogic: w,
                                allOption: g,
                                allowedOptions: h,
                                allowedPrefSuf: m,
                                allowedHash: u,
                                defaultAttrs: F,
                                currentOptions: I,
                                container: P,
                                disableOptionsUpdate: !!t.disableOptionsUpdate,
                                filterFunction: t.filterFunction,
                                sort: t.sort || "asc"
                            }, i.customFilters.append(P)
                        }
                    }), i.categoryFilter = i.customFilters.one(".categoriesDropdown"), i.tagFilter = i.customFilters.one(".tagsDropdown")), this.target.settings.ranges && this.target.settings.ranges.items && this.target.settings.ranges.items.length && this.target.settings.ranges.items.forEach(function(t, e) {
                        if (t.name) {
                            var a = t.name.trim(),
                                r = parseInt(t.positionOrder) || i.target.settings.filter.items ? i.target.settings.filter.items.length + 2 + e : 4 + e,
                                n = s(t.subName ? t.subName : a),
                                o = t.main || "name-" + s(a, !0),
                                l = (t.defined, t.getAttr ? t.getAttr : ""),
                                c = t.initText ? 'data-init-text="' + t.initText + '"' : "",
                                d = s(a) + "-target-" + i.target.index + "-" + (new Date).getTime(),
                                g = t.logic || "or",
                                h = Y.Node.create('<div class="sqs-block range-block rangeFilter ' + o + '" data-pos-order="' + r + '" data-logic="' + g + '" data-filter="' + n + '"><div class="sqs-block-content"><div class="range-block-wrapper"><input class="range-slider-input" id="range-filter-' + d + '" type="range"><label class="archive-dropdown-toggle-label" for="dropdown-filter-' + d + '"><span class="archive-dropdown-toggle-title"' + c + '><span class="defaultLabel"><span>' + a + '</span></span><span class="filterValues"></span><span class="reset-button icn-cancel"></span></span><span class="icn-down-open"></span></label><ul class="archive-group-list"></ul></div></div></div>'),
                                m = t.options || [];
                            i.getRangesAttrObj[n] ? console.warn(n + " - method already exists in getRangesAttrObj") : (i.getRangesAttrObj[n] = {
                                attr: l,
                                logic: g,
                                currentOptions: m,
                                container: h,
                                sort: t.sort || "asc"
                            }, i.customFilters.append(h))
                        }
                    }), i._addItemsAttributes(!0), i._buildDropdowns(), this.target.settings.sort && this.target.settings.sort.enabled && this.target.settings.sort.items && this.target.settings.sort.items.length) {
                    var d = "sort-target-" + i.target.index + "-" + (new Date).getTime(),
                        g = this.target.settings.sort.initText ? 'data-init-text="' + this.target.settings.sort.initText + '"' : "",
                        h = this.target.settings.sort.hidden ? "hidden" : "",
                        m = parseInt(this.target.settings.sort.positionOrder),
                        u = this.target.settings.sort.hideDefaultLabelIfDirty ? " hide-def-label" : "";
                    this.sortContainer = Y.Node.create('<div class="sqs-block archive-block sqs-block-archive sortDropdown ' + h + u + '" data-pos-order="' + m + '"><div class="sqs-block-content"><div class="archive-block-wrapper archive-block-setting-layout-dropdown archive-block-setting-text-alignment-left archive-block-setting-multicolumns"><input class="archive-dropdown-toggle-checkbox" id="dropdown-sort-' + d + '" type="checkbox"><label class="archive-dropdown-toggle-label" for="dropdown-sort-' + d + '"><span class="archive-dropdown-toggle-title"' + g + '><span class="defaultLabel"><span>' + this.target.settings.sort.title + '</span></span><span class="sortValues"></span><span class="reset-button icn-cancel"></span></span><span class="icn-down-open"></span></label><ul class="archive-group-list"></ul></div></div></div>'), this.target.settings.sort.items.forEach(function(t) {
                        var e = t.name ? t.name.trim() : "Set name here",
                            a = t.order ? t.order.split("|") : t.order || ["asc"],
                            r = t.hidden ? " hidden" : "",
                            n = !t.hasOwnProperty("showOrder") || t.showOrder,
                            o = "price" === s(e) ? " parseInt" : "";
                        a && a.length && a.forEach(function(a) {
                            if (i.sortObj[s(e) + "_" + a]) console.warn(s(e) + "_" + a + " - method already exists in sortObj");
                            else {
                                i.sortObj[s(e) + "_" + a] = t.sort || "[data-" + s(e) + "]" + o;
                                var l = n ? "_" + a : "_" + a + " hide-order";
                                i.sortContainer.one("ul").append('<li class="archive-group ' + s(e) + l + r + '"><a href="?sort=' + s(e) + "_" + a + '" data-sort="' + s(e) + "_" + a + '" class="archive-group-name-link">' + e + '<span class="' + s(e) + "-" + a + '"></span></a>')
                            }
                        })
                    }), this.customFilters.append(i.sortContainer)
                }
                if (this.target.settings.search && this.target.settings.search.enabled) {
                    var p = this.target.settings.search.text.trim() || "Search",
                        m = parseInt(this.target.settings.search.positionOrder);
                    this.searchMinLength = this.target.settings.search.minLength, this.searchContainer = Y.Node.create('<div class="sqs-block custom-items-search" data-pos-order="' + m + '"><div class="sqs-block-content"><span class="search-icon icn-search"></span><div data-preview="false" class="search-wrap sqs-search-ui-button-wrapper color-dark"><input minlength="' + this.target.settings.search.minLength + '" class="search-input" placeholder="' + p + '" type="text"/><span class="reset-button icn-cancel"></span></div></div></div>'), this.customFilters.append(this.searchContainer), this.searchContainer.one(".search-icon").on("click", function(t) {
                        t.halt(), i.target.settings.closeOptionsOnSelect && i.customFiltersWrapper.all(".archive-dropdown-toggle-checkbox").set("checked", !1), i.searchContainer.toggleClass("active"), i.searchContainer.hasClass("active") && i.searchContainer.one(".search-input")._node.focus()
                    }), this.searchFunction = this.target.settings.search.searchFunc
                }
                var f = i.customFiltersWrapper.all(".sqs-block-archive .archive-group-list");
                f && f.each(function(t, e) {
                    t.setStyle("zIndex", 1100 - e)
                }), this.container.delegate("click", function(t) {
                    t.halt(), i.customFiltersWrapper.all(".archive-group-name-link.active").removeClass("active"), i.filterAnim = !0, i._sortGrid()
                }, ".clearAllBtn"), this.container.delegate("click", function(t) {
                    t.halt();
                    var e = t.currentTarget.getAttribute("data-index");
                    if (e) {
                        var s = function() {
                            i.filterAnim = !0, i.paginationClicked = !0, i.pagination_num = parseInt(e), i._sortGrid()
                        };
                        if ("bottom" == i.target.settings.pagination.place) {
                            var a = i.container.getY() - 160;
                            i.scrollEl.anim({}, {
                                to: {
                                    scroll: [0, a]
                                },
                                duration: .8,
                                easing: Y.Easing.easeBoth
                            }).run().on("end", function() {
                                s()
                            })
                        } else s()
                    }
                }, ".pagination-item a"), this.container.delegate("click", function(t) {
                    t.halt();
                    var e = !(!i.pagination || !i.pagination.one(".pagination-item.active a")) && i.pagination.one(".pagination-item.active a").getAttribute("data-index");
                    if (e) {
                        i.pagination.one('.pagination-item a[data-index="' + (parseInt(e) + 1) + '"]') ? (i.filterAnim = !1, i.paginationClicked = !0, i.pagination_num = parseInt(e) + 1, i._sortGrid()) : console.log("No next page", e)
                    }
                }, ".pagination-loadMore-button"), this.container.delegate("click", function(t) {
                    t.currentTarget.addClass("clicked"), i.target.settings.closeOptionsOnSelect && i.customFiltersWrapper.all(".archive-block-wrapper:not(.clicked) .archive-dropdown-toggle-checkbox").set("checked", !1), i.searchContainer && i.searchContainer.removeClass("active"), t.currentTarget.removeClass("clicked")
                }, ".archive-block-wrapper");
                var v = function() {
                    i._addItemsAttributes(), i._buildDropdowns(), i._checkInitState(), i._sortGrid(), i.loadImages()
                };
                if (this.coll_data && this.coll_data.collection && v(), this.target.settings.customIndexUrl) this.requestComplete = !1,
                    function(t) {
                        return new Y.Promise(function(e) {
                            var i = {
                                collection: {},
                                items: []
                            };
                            Y.io(t + "?format=main-content", {
                                on: {
                                    success: function(t, s) {
                                        var a = s.responseText;
                                        if (a) {
                                            var r = document.createElement("div");
                                            if (r.innerHTML = a, r.querySelector("#collectionsIndex")) {
                                                a = r.querySelector("#collectionsIndex").value || "";
                                                try {
                                                    i = JSON.parse(a), e(i)
                                                } catch (t) {
                                                    console.warn("error : " + t), e(i)
                                                }
                                            } else e(i)
                                        } else e(i)
                                    },
                                    failure: function(t, s) {
                                        console.warn("error : " + s.status), e(i)
                                    }
                                }
                            })
                        })
                    }(this.target.settings.customIndexUrl).then(function(t) {
                        i.coll_data = {
                            collection: {},
                            items: t
                        }, v()
                    });
                else if (this.target.settings.requestAttrWithAjax)
                    if (this.requestComplete = !1, this.itemsParent && (this.itemsParent.hasClass("BlogList") || this.itemsParent.hasClass("sqs-blog-list") || this.itemsParent.hasClass("blog-list"))) Y.one(".BlogList-pagination") && Y.one(".BlogList-pagination").hide(),
                        function(t, e, i) {
                            return new Y.Promise(function(s) {
                                function a(t, r) {
                                    if (e) Y.io(t + "?format=main-content", {
                                        on: {
                                            success: function(t, a) {
                                                var r = a.responseText;
                                                if (r) {
                                                    var o = document.createElement("div");
                                                    if (o.innerHTML = r, o.querySelector("#collectionsIndex")) {
                                                        r = o.querySelector("#collectionsIndex").value || "";
                                                        try {
                                                            l.items = JSON.parse(r), i.target.settings.useSessionCache && n(l, e), s(l)
                                                        } catch (t) {
                                                            console.warn("error : " + t), s(l)
                                                        }
                                                    } else s(l)
                                                } else s(l)
                                            },
                                            failure: function(t, e) {
                                                console.warn("error : " + e.status), s(l)
                                            }
                                        }
                                    });
                                    else {
                                        var c = t.indexOf("?") > -1 ? "&format=page-context" : "?format=page-context";
                                        c += "&cache=" + ((new Date).getTime() + "").substr(0, 8), r && (c += "&offset=" + r), i.isEventsCollection && (c += "&view=list"), Y.io(t + c, {
                                            on: {
                                                success: function(e, c) {
                                                    var d = c.responseText;
                                                    if (d) try {
                                                        var g = JSON.parse(d),
                                                            h = !!g.upcoming || !!g.past || !!g.items || !!g.collection && !!g.collection.collections;
                                                        if (h && (g.upcoming && (l.upcoming = l.upcoming.concat(g.upcoming)), g.past && (l.past = l.past.concat(g.past)), g.items && (l.items = l.items.concat(g.items)), g.collection.collections && (l.items = l.items.concat(g.collection.collections))), r = g.offset && g.offset !== r ? g.offset : g.pagination && g.pagination.nextPageOffset && r !== g.pagination.nextPageOffset ? g.pagination.nextPageOffset : "", o && g.squarespace && g.squarespace["main-content"] && l.items && l.items.length > i.existedItems.size()) {
                                                            var m = Y.Node.create(g.squarespace["main-content"]),
                                                                u = !1;
                                                            m && m.one(i.target.items) && (l.html += g.squarespace["main-content"], u = m.all(i.target.items).addClass("item-filter-loaded"), i.addVirtualItems(u, g.items))
                                                        }
                                                        r && (o = !0), r ? (i.hasOwnProperty("__all_loaded") && (h ? (g.items, g.past, g.upcoming) : g.items), i.__all_loaded = !1, a(t, r)) : (i.__all_loaded = !0, i.target.settings.useSessionCache && n(l, t), s(l))
                                                    } catch (t) {
                                                        console.warn("error : " + t), s(l)
                                                    } else s(l)
                                                },
                                                failure: function(t, e) {
                                                    console.warn("error : " + e.status), s(l)
                                                }
                                            }
                                        })
                                    }
                                }
                                var o, l = {
                                    collection: {},
                                    past: [],
                                    upcoming: [],
                                    items: [],
                                    html: ""
                                };
                                e && (e.indexOf("http://") > -1 || e.indexOf("https://") > -1) && (t = e + "", e = !1);
                                var c = r(e || t);
                                c && i.target.settings.useSessionCache ? s(c) : a(t)
                            })
                        }(this.collectionUrl, this.target.settings.customIndexUrl, this).then(function(t) {
                            if (i.coll_data || (i.coll_data = {
                                    collection: {},
                                    items: []
                                }), t && t.items && t.items.length && (!i.coll_data || !i.coll_data.items || t.items.length > i.coll_data.items.length)) {
                                if (i.coll_data = t, i.existedItems = i.target.items && i.container.one(i.target.items) ? i.container.all(i.target.items) : new Y.NodeList, t.html) {
                                    var e = Y.Node.create(t.html),
                                        s = !1;
                                    e && e.one(i.target.items) && (s = e.one(i.target.items) ? e.all(i.target.items).addClass("item-filter-loaded") : new Y.NodeList, i.addVirtualItems(s, t.items), i.existedItems.size() < s.size() && i.addItems(s))
                                }
                            } else i.coll_data = t;
                            v()
                        });
                    else {
                        var b = this.collectionUrl;
                        this.config && this.config.enableLazy ? v() : function(t, e) {
                            return new Y.Promise(function(i) {
                                function s(t, e) {
                                    Y.io(t, {
                                        data: {
                                            format: "json",
                                            view: "list",
                                            cache: ((new Date).getTime() + "").substr(0, 8),
                                            offset: e && (e.indexOf("%26") > -1 || e.indexOf("&") > -1) ? e.split("%26")[0].split("&")[0] : e || ""
                                        },
                                        on: {
                                            success: function(r, n) {
                                                var o;
                                                try {
                                                    o = Y.JSON.parse(n.responseText), a.collection = o.collection, o.items && o.items.length || o.upcoming && o.upcoming.length || o.past && o.past.length ? (a.items = o.items ? a.items.concat(o.items) : a.items.concat(o.upcoming, o.past), o.pagination && o.pagination.nextPage && e !== o.pagination.nextPageUrl.split("offset=")[1] ? s(t, o.pagination.nextPageUrl.split("offset=")[1]) : i(a)) : i(a)
                                                } catch (t) {
                                                    return C && console.log("JSON Parse failed!"), !1
                                                }
                                            },
                                            failure: function(t) {
                                                console.warn("error : " + t.message), i(a)
                                            }
                                        }
                                    })
                                }
                                var a = {
                                        collection: {},
                                        items: []
                                    },
                                    n = r(t);
                                n && e.target.settings.useSessionCache ? i(n) : s(t)
                            })
                        }(b, this).then(function(t) {
                            i.coll_data = t, v(), i.target.settings.useSessionCache && n(i.coll_data, i.collectionUrl)
                        })
                    }
                if (this.u_id = "custom-filter-uid-" + this.target.index, a.push(this.u_id), this.target.settings.mobilePanel && this.target.settings.mobilePanel.enabled && a.push("use-mobile-panel"), this.target.settings.keepDropdownsOpen && a.push("keep-dropdowns-open"), this.target.settings.pagination && this.target.settings.pagination.enabled && this.target.settings.pagination.loadMoreButton && this.target.settings.pagination.loadMoreButton.enabled && a.push("cf-loadMoreButton-enabled"), !this.target.settings.simpleFilter.anim || this.target.settings.isotope && this.target.settings.isotope.enabled) a.push("no-used-css-animation");
                else if (this.target.settings.simpleFilter.layoutAnim) a.push("using-layout-animation");
                else {
                    this.target.settings.simpleFilter.persistent && a.push("persistent-animation"), a.push("used-css-animation"), a.push("show-animation-" + this.target.settings.simpleFilter.show.effect), a.push("hide-animation-" + this.target.settings.simpleFilter.hide.effect);
                    var w = this.target.settings.simpleFilter.show.easing,
                        _ = "." + i.u_id + ".used-css-animation  .custom-filter-grid-item{transition: opacity " + this.target.settings.simpleFilter.show.transitionDuration + "ms " + w + ", transform " + this.target.settings.simpleFilter.show.transitionDuration + "ms " + w + "}";
                    if (this.target.settings.simpleFilter.hide.transitionDuration) {
                        var y = this.target.settings.simpleFilter.hide.easing;
                        _ += "." + i.u_id + ".used-css-animation .hiding .custom-filter-grid-item{transition: opacity " + this.target.settings.simpleFilter.hide.transitionDuration + "ms " + y + ", transform " + this.target.settings.simpleFilter.hide.transitionDuration + "ms " + y + "}"
                    }
                    t(_, "stylesheet-" + i.container.getAttribute("id"), i.container._node)
                }
                var F = this.customFilters.all(".sqs-block");
                if (F._nodes.sort(function(t, e) {
                        return (t = parseInt(t.getAttribute("data-pos-order"))) - (e = parseInt(e.getAttribute("data-pos-order")))
                    }), i._checkInitState(), i._initFiltering(), i.first_sort_run || i._sortGrid(), this.customFilters.insert(F, null), this.target.settings.hidden && i.customFiltersWrapper.setStyles({
                        display: "none",
                        visibility: "hidden"
                    }), this.target.settings.updateFilterOptions && this.target.settings.updateFilterOptions.enabled && (this.target.settings.updateFilterOptions.showOptionsCounters && a.push("cf-show-options-counter"), this.target.settings.updateFilterOptions.nonExistOptions && this.target.settings.updateFilterOptions.nonExistOptions.disable && a.push("cf-non-exist-options-disable"), this.target.settings.updateFilterOptions.nonExistOptions && this.target.settings.updateFilterOptions.nonExistOptions.disableHard && a.push("cf-non-exist-options-disable-hard"), this.target.settings.updateFilterOptions.nonExistOptions && this.target.settings.updateFilterOptions.nonExistOptions.hide && a.push("cf-non-exist-options-hide")), this.target.settings.clearAllButton && this.target.settings.clearAllButton.enabled && this.customFilters.all(".archive-block").size() > 1) {
                    a.push("custom-filter-clear-all-enabled");
                    var O = this.target.settings.clearAllButton.text || "Clear All",
                        k = this.target.settings.clearAllButton.place && "after" === this.target.settings.clearAllButton.place ? "after" : "before";
                    this.clearAllBtn = Y.Node.create('<div class="sqs-block clearAllBtnWrapper"><div class="sqs-block-content"><a href="#" class="clearAllBtn">' + O + "</a></div></div>");
                    var x = this.customFilters.one(".filterDropdown") || this.customFilters.one(".sortDropdown");
                    "before" == k ? x && i.customFilters.insert(i.clearAllBtn, x) : (x = i.customFilters.all(".sortDropdown").size() ? i.customFilters.all(".sortDropdown") : i.customFilters.all(".filterDropdown")).size() && x.item(x.size() - 1).insert(i.clearAllBtn, "after")
                }
                if (a = a.toString().replace(/,/g, " "), this.container.addClass(a), this.target.settings.placeFiltersTo) {
                    i.container._node && (i.container._node.className = i.container._node.className.replace(/custom-filter-position-/g, "no-position-"));
                    var A = !1;
                    "object" == typeof this.target.settings.placeFiltersTo && this.target.settings.placeFiltersTo.desktop && this.target.settings.placeFiltersTo.mobile || (A = Y.one(this.target.settings.placeFiltersTo)), A ? i.placedContainer = A.addClass("cf-placed-filters").addClass(a).addClass(i.positionClasses).append(this.customFiltersWrapper) : console.log("Sorry, place container is not found.")
                } else i.container.prepend(i.customFiltersWrapper);
                this.target.settings.mobilePanel && this.target.settings.mobilePanel.enabled && (this.container.prepend('<button class="mobile-filter-trigger">' + this.target.settings.mobilePanel.triggerButtonName + "</button>"), this.container.delegate("click", function(t) {
                    i.container.toggleClass("mobile-panel-open"), i.container.hasClass("mobile-panel-open") ? (i.placedContainer && i.placedContainer.addClass("mobile-panel-open"), window._scrollBarWidth && Y.one("body").setStyle("marginRight", window._scrollBarWidth), Y.one("body").addClass("filter-scroll-lock")) : (i.placedContainer && i.placedContainer.removeClass("mobile-panel-open"), Y.one("body").removeClass("filter-scroll-lock").setStyle("marginRight", "auto"))
                }, ".mobile-filter-trigger"), this.customFiltersWrapper.delegate("click", function(t) {
                    i.container.removeClass("mobile-panel-open"), i.placedContainer && i.placedContainer.removeClass("mobile-panel-open"), Y.one("body").removeClass("filter-scroll-lock").setStyle("marginRight", "auto")
                }, ".mobile-panel-close")), this.target.settings.advancedMap && (this.target.settings.advancedMap.activateMarkerInfoOnItemHover && this.container.delegate("hover", function(t) {
                    t.currentTarget._markerInst && t.currentTarget._markerInst.openInfo && t.currentTarget._markerInst.openInfo()
                }, function() {
                    i.advancedMap && i.advancedMap._node && i.advancedMap._node._map && i.advancedMap._node._closeInfo && i.advancedMap._node._closeInfo()
                }, ".custom-filter-grid-item"), this.target.settings.advancedMap.activateMarkerInfoOnItemClick && this.container.delegate("click", function(t) {
                    i.advancedMap && (t.halt(), t.currentTarget._markerInst && t.currentTarget._markerInst.openInfo && t.currentTarget._markerInst.openInfo())
                }, ".custom-filter-grid-item")), this.container.fire("custom-filter-init", this.container), this.container.fire && this.container.fire("custom-filter:filter-init", {
                    customFilter: i
                }), Y.fire("custom-filter:filter-init", {
                    customFilter: i
                })
            }
        },
        _initFilterPosition: function() {
            var t = this.target.settings.position || "top",
                e = this.target.settings.align || "center";
            this.positionClasses = "custom-filter-position-" + t + " custom-filter-align-" + e, this.container.addClass("custom-filter-position-" + t).addClass("custom-filter-align-" + e).addClass("clear clearfix")
        },
        _buildFilterSelectors: function() {
            var t = this;
            t.needRunFilterFunctions = !1, t.filter_selectors = "";
            var e = [];
            for (var i in t.filterParams)
                if (t.filterParams.hasOwnProperty(i) && t.filterParams[i] && t.filterParams[i].length) {
                    var s = {
                        name: i,
                        selectors: t.filterParams[i]
                    };
                    s.logic = t.getFilterAttrObj[i] && t.getFilterAttrObj[i].logic ? t.getFilterAttrObj[i].logic : "and", s.multipleLogic = t.getFilterAttrObj[i] && t.getFilterAttrObj[i].multipleLogic ? t.getFilterAttrObj[i].multipleLogic : "or", s.multiple = !!t.getFilterAttrObj[i] && t.getFilterAttrObj[i].multiple, s.filterFunction = !(!t.getFilterAttrObj[i] || !t.getFilterAttrObj[i].filterFunction) && t.getFilterAttrObj[i].filterFunction, e.push(s)
                }
            return e.length && e.forEach(function(e, i) {
                if (e.selectors && e.selectors.length) {
                    var s = "or" === e.multipleLogic ? e.selectors + "" : e.selectors.join(""),
                        a = !!t.filter_selectors && t.filter_selectors.split(","),
                        r = [];
                    e.filterFunction && "function" == typeof e.filterFunction && (s = "*-*", t.needRunFilterFunctions = !0), a ? "and" === e.logic ? (a.forEach(function(t) {
                        t && s.split(",").forEach(function(e) {
                            e && "*-*" !== e ? r.push(t + e) : "*-*" == e && r.push(t)
                        })
                    }), t.filter_selectors = r.join()) : t.filter_selectors += "," + s : t.filter_selectors = s
                }
            }), Y.fire && Y.fire("custom-filter:currentFilters", {
                customFilter: t,
                currentFilters: e
            }), t.filter_selectors && t.filter_selectors.length && "," === t.filter_selectors[t.filter_selectors.length - 1] && (t.filter_selectors = t.filter_selectors.substring(0, t.filter_selectors.length - 1)), t.filter_selectors
        },
        _sortNodes: function(t) {
            var e = this,
                i = !1,
                s = !1,
                a = !1,
                r = e.sortObj[e.sort_param] || e.sortObj.index;
            if (!r) return t;
            "function" != typeof r && (i = r.indexOf("parseInt") > -1, s = r.indexOf("parseFloat") > -1, a = r.indexOf("]") > -1), i && (r = r.split("parseInt")[0]), s && (r = r.split("parseFloat")[0]);
            var n = e.sort_param.indexOf("desc") > -1,
                o = [];
            e.sort_param.indexOf("price_") > -1 && !i && !s && (i = !0);
            var l = t._nodes.slice(0);
            t._nodes.sort(function(t, l) {
                var c = "";
                return e.sort_param in e.sortObj && ("function" == typeof r ? c = (t = e.sortObj[e.sort_param](t, t.itemData)) < (l = e.sortObj[e.sort_param](l, l.itemData)) ? -1 : t > l ? 1 : 0 : r && (r = r.replace(/ /g, "").replace(/\[/g, "").replace(/\]/g, ""), (!a && t.querySelector(r) && l.querySelector(r) || a && t.getAttribute(r) && l.getAttribute(r)) && (a && l.getAttribute(r) && t.getAttribute(r) ? (t = t.getAttribute(r).toLowerCase().replace(/ /g, ""), l = l.getAttribute(r).toLowerCase().replace(/ /g, "")) : l.querySelector(r) && t.querySelector(r) && (t = t.querySelector(r).textContent.toLowerCase().replace(/\r?\n|\r/g, "").replace(/ /g, ""), l = l.querySelector(r).textContent.toLowerCase().replace(/\r?\n|\r/g, "").replace(/ /g, "")), c = i ? (t = parseInt(t)) - (l = parseInt(l)) : s ? (t = parseFloat(t)) - (l = parseFloat(l)) : t < l ? -1 : t > l ? 1 : 0))), 0 === c && t && (t._node || t.nodeName) && (c = n ? parseInt(l.getAttribute("data-index")) - parseInt(t.getAttribute("data-index")) : parseInt(t.getAttribute("data-index")) - parseInt(l.getAttribute("data-index"))), 0 === c && o.push(c), c
            });
            return o.length === t._nodes.length - 1 ? (t._nodes = l, t) : (n && t._nodes.reverse(), t)
        },
        _updateFilterOptions: function(t) {
            var e = this;
            this.target.settings.updateFilterOptions && this.target.settings.updateFilterOptions.enabled && this.filtersDropdowns && this.filtersDropdowns.size() && this.filtersDropdowns.each(function(t) {
                t.all(".archive-group-name-link").each(function(t) {
                    var i = t.getAttribute("data-filter") + "-" + t.getAttribute("data-filter-val");
                    if (e.filterSelectors[i]) {
                        var s = e.filterSelectors[i];
                        if (s) {
                            var a = s.length;
                            if (a ? t.removeClass("not-in-filter-view") : t.addClass("not-in-filter-view"), !t.hasAttribute("data-items-count") || t.getAttribute("data-items-count") != a) {
                                var r = e.target.settings.updateFilterOptions.optionsCounterWrap,
                                    n = r ? r.slice(0, -1) + a + r.slice(-1) : a;
                                t.setAttribute("data-items-count", n), t.setAttribute("data-count", a)
                            }
                        }
                    }
                })
            })
        },
        _checkChildOptionsToHide: function(t, e, i, s, a) {
            if (!i.hasClass("filter-hidden")) {
                var r = this,
                    n = i.getAttribute("data-filter").trim();
                i.all(".archive-group-name-link[data-filter]").each(function(i) {
                    var a = i.getAttribute("data-filter-val").trim();
                    r.itemsParent.one(e + "." + n + "-" + a) ? (i.get("parentNode").show().removeClass("hidden-by-parent"), s && i.get("parentNode").addClass("showed-by-parent"), t.checkedChildren[n].push(a)) : (s ? !i.get("parentNode").hasClass("showed-by-parent") && i.get("parentNode").hide().addClass("hidden-by-parent") : i.get("parentNode").hide().addClass("hidden-by-parent"), t.checkedChildren[n] && t.checkedChildren[n].indexOf(a) > -1 && t.checkedChildren[n].splice(t.checkedChildren[n].indexOf(a), 1))
                })
            }
        },
        _addMarkersInstancesToItems: function() {
            var t = this;
            this.target.settings.advancedMap && this.target.settings.advancedMap.advancedMapContainer && (this.advancedMap = Y.one(this.target.settings.advancedMap.advancedMapContainer + " .custom-map-block"), this.advancedMap && this.advancedMap._node._markersObj && (t.target.settings.advancedMap.activateItemOnMarkerClick && (t.advancedMap._node._activatingFilterItems = !0), this.items.each(function(e) {
                var i = !(!e._node._item_data || !e._node._item_data.id) && e._node._item_data.id;
                i && t.advancedMap._node._markersObj && t.advancedMap._node._markersObj["marker-" + i] && (t.advancedMap._node._markersObj["marker-" + i].itemInDom = e, e._markerInst = t.advancedMap._node._markersObj["marker-" + i], e._node._markerInst = t.advancedMap._node._markersObj["marker-" + i])
            }), this.target.settings.advancedMap.activateMarkerInfoOnItemClick && Y.SQS.Gallery.Manager && Y.SQS.Gallery.Manager.unlightboxify(this.items)))
        },
        _filterAdvancedMapMarkers: function() {
            var t = null;
            this.target.settings.advancedMap.updateMapBound && window.google && window.google.maps && (t = new google.maps.LatLngBounds);
            var e = !1,
                i = [],
                s = function(s) {
                    s.hasClass("element-showed") ? (s._markerInst.getVisible() || s._markerInst.setVisible(!0), t && (t.extend(s._markerInst.getPosition()), e = !0), i.push(s._markerInst)) : (s.hasClass("element-hidden") || s._node.style.display.indexOf("none") > -1 || 0 == s.width() || 0 == s.height()) && s._markerInst.getVisible() && s._markerInst.setVisible(!1)
                };
            if (this.advancedMap._node._markersObj) {
                for (var a in this.advancedMap._node._markersObj)
                    if (this.advancedMap._node._markersObj.hasOwnProperty(a)) {
                        var r = this.advancedMap._node._markersObj[a],
                            n = r.itemInDom;
                        n ? s(n) : this.filter_selectors ? r.setVisible(!1) : r.setVisible(!0)
                    }
            } else this.items.each(function(t, e) {
                t._markerInst && s(t)
            });
            this.advancedMap._node._markerCluster && (this.advancedMap._node._markerCluster.clearMarkers(), this.advancedMap._node._markerCluster.addMarkers(i)), (t && e && this.advancedMap && this.advancedMap._node._map || this.advancedMap._node.radiusCircle) && (this.advancedMap._node.radiusCircle && (t = this.advancedMap._node.radiusCircle.getBounds()), this.advancedMap._node._mapBound = t, this.advancedMap._node._map.fitBounds(t))
        },
        _sortGrid: function() {
            var t = this;
            if (t.first_sort_run = !0, t.currentFilterValues = {}, t.virtual_list && t.virtual_list.size(), this.advancedMap && this.items.size() && !this.items.item(this.items.size() - 1)._markerInst && this._addItemsAttributes(), this.filtersDropdowns && this.filtersDropdowns.size() && this.filtersDropdowns.each(function(e) {
                    var i = !!e.getAttribute("data-strict") && "true" === e.getAttribute("data-strict"),
                        s = !!e.getAttribute("data-multiple") && "true" === e.getAttribute("data-multiple"),
                        a = e.getAttribute("data-multiple-logic") || "or",
                        r = e.getAttribute("data-logic") || "or",
                        n = e.getAttribute("data-filter").trim();
                    t.filterParams[n] = [];
                    var o = e.one(".archive-dropdown-toggle-title"),
                        l = e.one(".archive-dropdown-toggle-title .filterValues"),
                        c = (!!e.getAttribute("data-children") && e.getAttribute("data-children").split(","), !!e.getAttribute("data-check-children") && e.getAttribute("data-check-children"), !!e.getAttribute("data-defined") && "true" === e.getAttribute("data-defined"));
                    c && !e.one(".active") && e.one('[data-filter-val="all"]') ? e.one('.archive-group-name-link[data-filter-val="all"]') && e.one('.archive-group-name-link[data-filter-val="all"]').addClass("active") : c && !e.one(".active") && e.one(".archive-group-name-link") && e.one(".archive-group-name-link").addClass("active");
                    e.all(".archive-group-name-link[data-filter]");
                    if (e.one(".archive-group-name-link.active")) {
                        var d = "";
                        if (!e.hasClass("filter-hidden")) {
                            var g = e.all(".archive-group:not(.hidden-by-parent) .archive-group-name-link.active");
                            g.each(function(e, o) {
                                d += e.get("innerHTML"), g.size() > 1 && o < g.size() - 1 && (d += '<span class="divider">, </span>');
                                var l = e.getAttribute("data-filter-val").trim(),
                                    c = {};
                                c.value = l, c.attr = t.getFilterAttrObj ? t.getFilterAttrObj[n].attr : "", c.filterFunction = !!t.getFilterAttrObj && t.getFilterAttrObj[n].filterFunction, c.textValue = (e.get("textContent") || e.get("innerText")).replace(/\r?\n|\r/g, "").trim(), c.param = n, c.multiple = s, c.multipleLogic = a, c.logic = r;
                                var h = i ? "." + n + "-" + l : '[class*="' + n + "-" + l + '"]';
                                c.sel = h, t.filterParams[n].push(h), t.currentFilterValues[n] = c, t.currentFilterValues["__" + n + "-values"] || (t.currentFilterValues["__" + n + "-values"] = []), t.currentFilterValues["__" + n + "-values"].push(c.textValue)
                            }), l && l.set("innerHTML", d), o.addClass("dirty"), e.addClass("dirty")
                        }
                    } else l && l.set("innerHTML", ""), o.removeClass("dirty"), e.removeClass("dirty")
                }), this.sortContainer) {
                var e = this.sortContainer.one(".archive-dropdown-toggle-title"),
                    i = this.sortContainer.one(".archive-dropdown-toggle-title .sortValues"),
                    s = this.sortContainer.one(".active");
                s ? (i && i.set("innerHTML", t.sortContainer.one(".active").get("innerHTML")), e && e.addClass("dirty") && this.sortContainer.addClass("dirty"), t.sort_param = s.getAttribute("data-sort") || "", C && console.log(s.getAttribute("data-sort"))) : (i && i.set("innerHTML", ""), e && e.removeClass("dirty") && this.sortContainer.removeClass("dirty"), t.sort_param = "index")
            }
            if (this.customFiltersWrapper.one(".filterDropdown.dirty") ? (this.customFiltersWrapper.addClass("dropdowns-dirty"), this.container.addClass("filter-dropdowns-dirty"), this.placedContainer && this.placedContainer.addClass("filter-dropdowns-dirty")) : (this.customFiltersWrapper.removeClass("dropdowns-dirty"), this.container.removeClass("filter-dropdowns-dirty"), this.placedContainer && this.placedContainer.removeClass("filter-dropdowns-dirty")), this.customFiltersWrapper.one(".sortDropdown.dirty") ? (this.customFiltersWrapper.addClass("dropdowns-dirty"), this.container.addClass("filter-sort-dirty"), this.placedContainer && this.placedContainer.addClass("filter-sort-dirty")) : (!this.container.hasClass("filter-dropdowns-dirty") && this.customFiltersWrapper.removeClass("dropdowns-dirty"), this.container.removeClass("filter-sort-dirty"), this.placedContainer && this.placedContainer.removeClass("filter-sort-dirty")), this.searchRegex ? (this.customFiltersWrapper.addClass("search-dirty"), this.container.addClass("filter-search-dirty"), this.placedContainer && this.placedContainer.addClass("filter-search-dirty")) : (this.customFiltersWrapper.removeClass("search-dirty"), this.container.removeClass("filter-search-dirty"), this.placedContainer && this.placedContainer.removeClass("filter-search-dirty")), this._buildFilterSelectors(), this.searchContainer && this.searchContainer.removeClass("searching"), this.target.settings.mobilePanel && this.target.settings.mobilePanel.enabled && this.target.settings.mobilePanel.closeOnSelect && (this.container.removeClass("mobile-panel-open"), t.placedContainer && t.placedContainer.removeClass("mobile-panel-open"), Y.one("body").removeClass("filter-scroll-lock").setStyle("marginRight", "auto")), t.filterSelectors)
                for (var a in t.filterSelectors) t.filterSelectors[a] = [];
            if (t.items && t.items.size()) {
                t.filtered = new Y.NodeList, t.hidden = new Y.NodeList;
                var r = t.target.settings.search.customSearchFunc,
                    n = !!t.filter_selectors && t.filter_selectors.trim().replace(/\*-\*/g, "").replace(/ /g, ",");
                t.items.each(function(e) {
                    var i = t.searchRegex && !r ? t.searchFunction(e).match(t.searchRegex) : !t.searchRegex || !r || "function" != typeof r || r(!1, e),
                        s = !n || e.test(n);
                    if (t.needRunFilterFunctions && s)
                        for (var a in t.currentFilterValues) t.currentFilterValues.hasOwnProperty(a) && t.currentFilterValues[a].filterFunction && (s = t.currentFilterValues[a].filterFunction(e, t.currentFilterValues["__" + a + "-values"]));
                    i && s ? (e.hasClass("element-hidden") && e.removeClass("element-hidden"), e.addClass("element-showed"), t.filtered.push(e), t.filterSelectors && (e._node.classList && e._node.classList.forEach ? e._node.classList.forEach(function(e) {
                        t.filterSelectors[e] && t.filterSelectors[e].push(1)
                    }) : e._node.className.split(" ").forEach(function(e) {
                        t.filterSelectors[e] && t.filterSelectors[e].push(1)
                    }))) : (e.hasClass("element-hidden") || e.addClass("element-hidden"), e.removeClass("element-showed"), t.hidden.push(e))
                }), t.sort_param && (t.filtered = t._sortNodes(t.filtered)), t.filtered.size() || t.pagination && (t.pagination.remove(), t.pagination = null, t.pagination_num = 1), t._updateFilterOptions(t.filtered), t.isotope || t.mixitup || (t.itemsCount && t.itemsCount.one(".items-count").set("text", t.filtered.size()), t.filtered = t._buildPagination(t.filtered))
            } else t.pagination && (t.pagination.remove(), t.pagination = null, t.pagination_num = 1);
            t.filtered && t.filtered.size() ? (this.customFiltersWrapper.addClass("has-results").removeClass("no-results"), this.container.addClass("filter-has-results").removeClass("filter-has-no-results"), this.placedContainer && this.placedContainer.addClass("filter-has-results").removeClass("filter-has-no-results")) : (this.customFiltersWrapper.removeClass("has-results").addClass("no-results"), this.container.removeClass("filter-has-results").addClass("filter-has-no-results"), this.placedContainer && this.placedContainer.removeClass("filter-has-results").addClass("filter-has-no-results")), this.container.fire && this.container.fire("custom-filter:sort-grid", {
                customFilter: t
            }), Y.fire("custom-filter:sort-grid", {
                customFilter: t
            }), t.isotope ? (t.filterAnim ? t.isotope.options.transitionDuration = t.isotope.options.origTransitionDuration : t.isotope.options.transitionDuration = 0, t.isotope.arrange({
                sortBy: t.sort_param
            })) : t.mixitup ? t.mixitup.multimix({
                filter: t.filter_selectors,
                sort: t.sort_param.replace("_", ":")
            }) : t._simpleFilter()
        },
        _simpleFilter: function() {
            var t = this,
                e = (this.container.hasClass("custom-filter-init-state"), !1),
                i = 0,
                s = 0,
                a = function() {
                    if (e) {
                        if (t.filter_ids = "", e)
                            if (t.target.settings.simpleFilter.persistent || t.hidden && t.hidden.size() && t.hidden.remove(), t.itemsParent) t.target.settings.simpleFilter.persistent ? t.itemsParent.insert(e, t.itemsParent.one(".element-hidden")) : t.itemsParent.insert(e, null);
                            else if (t.container.hasClass("collection-type-blog")) {
                            var i = t.container.one(".blog-list") || t.container.one(".sqs-blog-list") || t.container.one(".BlogList");
                            i && (t.target.settings.simpleFilter.persistent ? i.insert(e, i.one(".element-hidden")) : i.insert(e, null))
                        } else t.container.hasClass("ProductList") ? t.container.one(".ProductList-grid") && (t.target.settings.simpleFilter.persistent ? t.container.one(".ProductList-grid").insert(e, t.container.one(".ProductList-grid").one(".element-hidden")) : t.container.one(".ProductList-grid").insert(e, null)) : t.container.insert(e, null);
                        ! function(e) {
                            if (t.itemsParent.hasClass("sqs-gallery") || t.itemsParent.getData("gallery")) {
                                var i = t.itemsParent.getData("gallery");
                                i ? (i["gallery-design"] && i["gallery-design"].dimensions && (i["gallery-design"].dimensions = []), t.container.hasClass("lazy-summary-enabled") || t.loadImages(e), e && i.set("slides", e), !t.container.hasClass("performance-mode-used") && i.refresh()) : t.loadImages(e), C && console.log("gallery refresh")
                            } else t.loadImages(e);
                            t.advancedMap && (t._addMarkersInstancesToItems(), t._filterAdvancedMapMarkers()), Y.fire("custom-filter:gallery-refresh"), t.container.fire && t.container.fire("custom-filter:gallery-refresh", {
                                customFilter: t
                            }), t.waitingForNewItems = !1
                        }(e), t.waitingForNewItems ? C && console.log("waiting...") : (t.target.settings.simpleFilter.anim && e.each(function(e, i) {
                            var s = t.target.settings.simpleFilter.show.stagger * i;
                            e.setStyles({
                                transitionDelay: s > 2200 ? "2200ms" : s + "ms"
                            })
                        }), t.target.settings.simpleFilter.layoutAnim ? t.itemsParent.removeClass("refreshing") : t.filterAnim && t.target.settings.simpleFilter.anim ? (C && console.log("anim"), setTimeout(function() {
                            t.itemsParent.removeClass("refreshing"), t.itemsParent.removeClass("hiding"), t.itemsParent.addClass("pre-showing"), setTimeout(function() {
                                t.itemsParent.addClass("showing"), s ? setTimeout(function() {
                                    t.itemsParent.removeClass("showing"), t.itemsParent.removeClass("pre-showing")
                                }, s) : (t.itemsParent.removeClass("showing"), t.itemsParent.removeClass("pre-showing"))
                            }, 17)
                        }, 17)) : (C && console.log("no-anim"), t.itemsParent.removeClass("refreshing"), t.itemsParent.removeClass("hiding"), t.itemsParent.removeClass("showing"), t.itemsParent.removeClass("pre-showing")))
                    }
                };
            if (t.items && t.items.size()) {
                (e = t.filtered) && 0 === e.size() ? t.container.addClass("custom-filter-no-result") : t.container.removeClass("custom-filter-no-result");
                var r = "";
                if (e && e.size() && (e.each(function(t) {
                        r += t.get("_yuid")
                    }), t.sorted_ids && r === t.sorted_ids)) return void(C && console.log("No rush"));
                t.sorted_ids = r;
                var n = t.hidden.size() ? t.hidden.size() * t.target.settings.simpleFilter.hide.stagger : 20,
                    o = t.filtered ? t.filtered.size() * t.target.settings.simpleFilter.show.stagger : 20;
                t.filterAnim && t.target.settings.simpleFilter.anim && (i = t.target.settings.simpleFilter.hide.transitionDuration ? t.target.settings.simpleFilter.hide.transitionDuration + n : 0, i = Math.min(1e3, Math.max(20, i)), s = t.target.settings.simpleFilter.show.transitionDuration ? t.target.settings.simpleFilter.show.transitionDuration + o : 0, s = Math.min(500, Math.max(20, s))), C && console.log(i, s), t.target.settings.simpleFilter.anim && t.itemsParent.all(".custom-filter-grid-item").each(function(e, i) {
                    var s = t.target.settings.simpleFilter.hide.stagger * i;
                    e.hasClass("element-showed"), e.setStyles({
                        transitionDelay: s > 2e3 ? "0ms" : s + "ms"
                    })
                }), t.itemsParent.removeClass("showing"), t.filterAnim ? (t.target.settings.simpleFilter.anim && t.itemsParent.addClass("hiding"), i && t.target.settings.simpleFilter.anim ? setTimeout(function() {
                    a()
                }, i) : a()) : a()
            }
        },
        _addFLIPGroup: function() {
            if (this.target.settings.simpleFilter && this.target.settings.simpleFilter.anim) {
                var t = this;
                window.FLIP && (this.flipItems = [], t.flipGroup = null, this.items.each(function(e, i) {
                    e.hasClass("element-hidden") || t.flipItems.push({
                        element: e._node,
                        duration: t.target.settings.simpleFilter.transitionDuration,
                        delay: t.target.settings.simpleFilter.stagger * i > 1e3 ? 0 : t.target.settings.simpleFilter.stagger * i,
                        easing: function(t) {
                            return (t *= 2) < 1 ? .5 * t * t * t * t * t : .5 * ((t -= 2) * t * t * t * t + 2)
                        }
                    })
                }), t.flipGroup = FLIP.group(this.flipItems))
            }
        },
        _checkInitState: function() {
            var t = this;
            if (this.queryParams = null, this.target.settings.urlQuery && location.search && location.search.indexOf("=") > -1) {
                var e = location.search.substring(1);
                try {
                    var i = JSON.parse('{"' + e.replace(/&/g, '","').replace(/=/g, '":"') + '"}', function(t, e) {
                        return "" === t ? e : decodeURIComponent(e)
                    });
                    this.queryParams = i;
                    for (var a in i)
                        if (i[a])
                            if (t.getFilterAttrObj && t.getFilterAttrObj[a]) {
                                t.target.settings.initState.filter || (t.target.settings.initState.filter = []);
                                var r = a + "|" + decodeURIComponent(i[a]); - 1 === t.target.settings.initState.filter.indexOf(r) && t.target.settings.initState.filter.push(r)
                            } else if (t.sortObj && (t.sortObj[a] || t.sortObj[a + "_desc"])) {
                        t.target.settings.initState.sort || (t.target.settings.initState.sort = []);
                        var n = a + "|" + decodeURIComponent(i[a]); - 1 === t.target.settings.initState.sort.indexOf(n) && t.target.settings.initState.sort.push(n)
                    }
                } catch (t) {
                    console.log(t)
                }
            }
            this.target.settings.initState && (this.target.settings.initState.filter || this.target.settings.initState.sort) && (this.target.settings.initState.filter && this.target.settings.initState.filter.length && this.target.settings.initState.filter.forEach(function(e) {
                var i = (e = e.toLowerCase().split("|"))[1] ? s(e[1]) : "",
                    a = e[0] ? s(e[0]) : "";
                i && a && t.customFiltersWrapper.all('.archive-group-name-link[data-filter="' + a + '"][data-filter-val="' + i + '"]').addClass("active")
            }), this.target.settings.initState.sort && this.target.settings.initState.sort.length && (t.customFiltersWrapper.all(".archive-group-name-link[data-sort]").removeClass("active"), this.target.settings.initState.sort.forEach(function(e) {
                if (e) {
                    var i = (e = e.toLowerCase().split("|"))[0] ? s(e[0]) : "",
                        a = e[1] ? s(e[1]) : "asc";
                    i && a && (t.sort_param = i + "_" + a, t.customFiltersWrapper.all('.archive-group-name-link[data-sort="' + i + "_" + a + '"]').addClass("active"))
                }
            })), this.container.addClass("custom-filter-init-state"))
        },
        _initFiltering: function() {
            var t = this;
            if (this.filtersDropdowns = this.customFilters.all(".filterDropdown"), this.exclude_name = !!this.target.settings.excludeFilter && s(this.target.settings.excludeFilter.trim()), this.filtersDropdowns.size() && this.filtersDropdowns.each(function(e) {
                    e.one("label");
                    e.defaultLabel = (e.one(".archive-dropdown-toggle-title").get("textContent") || e.one(".archive-dropdown-toggle-title").get("innerText")).replace(/\r?\n|\r/g, "").trim();
                    var i = e.all(".archive-group-name-link");
                    i.removeAttribute("data-ajax-loader");
                    var s = !!e.getAttribute("data-multiple") && "true" === e.getAttribute("data-multiple");
                    e.delegate("click", function(i) {
                        i.halt(), e.all(".archive-group-name-link.active").removeClass("active"), t.filterAnim = !0, t._sortGrid()
                    }, ".reset-button"), e.delegate("click", function(a) {
                        a.halt(), i = e.all(".archive-group-name-link"), "all" !== a.currentTarget.get("text").trim() && s ? (a.currentTarget.toggleClass("active"), e.one('[data-filter-val="all"]') && ("all" !== a.currentTarget.getAttribute("data-filter-val") ? e.one('[data-filter-val="all"]').removeClass("active") : (i.removeClass("active"), a.currentTarget.addClass("active")), i.filter(".active").size() < 1 && e.one('[data-filter-val="all"]').addClass("active"))) : (a.currentTarget.addClass("clicked"), i.filter(":not(.clicked)").removeClass("active"), a.currentTarget.toggleClass("active"), a.currentTarget.removeClass("clicked")), t.target.settings.closeOptionsOnSelect && e.one(".archive-dropdown-toggle-checkbox").set("checked", !1), t.filterAnim = !0, Y.fire("custom-filter:filter-filtering", {
                            customFilter: t
                        }), t.container.fire && t.container.fire("custom-filter:filter-filtering", {
                            customFilter: t,
                            param: a.currentTarget.getAttribute("data-filter-val")
                        }), t._sortGrid()
                    }, ".archive-group-name-link[data-filter-val]")
                }), this.searchContainer) {
                var e = a(function(e) {
                    t.searchContainer.addClass("searching"), t.searchValue = e.newVal, t.searchRegex = new RegExp(e.newVal, "gi"), e.newVal && e.newVal.trim() || t.searchContainer.removeClass("searching"), e.newVal ? t.searchContainer.addClass("dirty") : t.searchContainer.removeClass("dirty"), t.target.settings.search.disableSearch || ((!e.newVal || e.newVal.length < t.searchMinLength) && (t.searchRegex = ""), t.target.settings.search.customSearchFunc ? (!e.newVal || e.newVal.length >= t.searchMinLength) && t.target.settings.search.customSearchFunc(e) : (Y.fire("custom-filter:filter-sorting", {
                        customFilter: t
                    }), t.container.fire && t.container.fire("custom-filter:filter-sorting", {
                        customFilter: t,
                        param: "searching.."
                    }), t.isotope ? (t.isotope.options.transitionDuration = t.isotope.options.origTransitionDuration, t.isotope.arrange({
                        sortBy: t.sort_param
                    })) : t.mixitup ? t.mixitup.sort() : (t.filterAnim = !0, t._sortGrid())))
                }, t.target.settings.search.timeout, !1);
                this.searchContainer.one(".search-input").on("valuechange", function(t) {
                    e(t)
                }), this.searchContainer.delegate("click", function(i) {
                    i.halt(), t.searchContainer.one(".search-input").set("value", ""), t.searchContainer.removeClass("dirty"), e({
                        newVal: "",
                        reset: !0
                    }), t.filterAnim = !0
                }, ".reset-button")
            }
            if (this.sortContainer) {
                this.sortContainer.defaultLabel = this.sortContainer.one(".archive-dropdown-toggle-title").get("innerHTML");
                this.sortContainer.one("label");
                this.sortContainer.delegate("click", function(e) {
                    e.halt(), t.sortContainer.all(".archive-group-name-link.active").removeClass("active"), t.filterAnim = !0, t._sortGrid()
                }, ".reset-button"), this.sortContainer.delegate("click", function(e) {
                    e.halt(), e.currentTarget.addClass("clicked"), t.sortContainer.all(":not(.clicked)").removeClass("active"), e.currentTarget.toggleClass("active"), e.currentTarget.removeClass("clicked"), t.target.settings.closeOptionsOnSelect && t.sortContainer.one(".archive-dropdown-toggle-checkbox").set("checked", !1), t.container.fire && t.container.fire("custom-filter:filter-sorting", {
                        customFilter: t,
                        param: e.currentTarget.getAttribute("data-filter-val")
                    }), t.filterAnim = !0, Y.fire("custom-filter:filter-sorting", {
                        customFilter: t
                    }), t._sortGrid()
                }, ".archive-group-name-link[data-sort]")
            }
            if (C && console.log("filter init"), (!this.target.settings.isotope.enabled || !1 in window) && (!this.target.settings.mixitup.enabled || !1 in window) && this.container.addClass("using-simple-filter"), "mixitup" in window && this.target.settings.mixitup.enabled) C && console.log("mixitup"), this.container.addClass("mixitup-filter-used"), t.mixitup = mixitup(t.itemsParent.getDOMNode(), {
                controls: {
                    enable: !1
                },
                selectors: {
                    target: t.target.items
                },
                animation: {
                    duration: t.target.settings.mixitup.transitionDuration
                },
                callbacks: {
                    onMixEnd: function(e) {
                        t.itemsCount && t.itemsCount.one(".items-count").set("text", e.totalShow), 0 === e.totalShow ? t.container.addClass("custom-filter-no-result") : t.container.removeClass("custom-filter-no-result"), t.advancedMap && t._filterAdvancedMapMarkers(), Y.fire("custom-filter:gallery-refresh"), t.container.fire && t.container.fire("custom-filter:gallery-refresh", {
                            customFilter: t
                        }), t.filterAnim = !1, t.waitingForNewItems = !1
                    }
                }
            });
            else if ("Isotope" in window && this.target.settings.isotope.enabled) {
                C && console.log("isotope"), this.container.addClass("isotope-filter-used");
                var i = this.target.settings.isotope.columnWidth ? this.target.settings.isotope.columnWidth : this.config ? this.config.columnWidth : this.items.item(0).get("outerWidth"),
                    r = this.target.settings.isotope.gutter ? this.target.settings.isotope.gutter : this.config ? this.config.gutter : 0,
                    n = t.target.settings.isotope && t.target.settings.isotope.transitionDuration ? parseFloat(t.target.settings.isotope.transitionDuration) : 500,
                    o = this.config && this.config.design ? "autocolumns" == this.config.design : t.itemsParent.hasClass("sqs-gallery") && t.itemsParent.hasClass("sqs-gallery-design-autocolumns");
                if (t.itemsParent.hasClass("sqs-gallery") && t.itemsParent.getData("gallery")) {
                    var c = t.itemsParent.getData("gallery");
                    t.itemsParent.clearData("gallery"), Y.Squarespace.GalleryManager && (Y.Squarespace.GalleryManager._galleries && Y.Squarespace.GalleryManager._galleries.length && Y.Squarespace.GalleryManager._galleries.forEach(function(e, s) {
                        c._yuid === e._yuid && (e.after("destroy", function() {
                            C && console.log("DESTROY"), o && t.itemsParent.addClass("sqs-gallery-design-autocolumns"), t.itemsParent.setStyles({
                                margin: null,
                                marginBottom: null,
                                marginTop: null
                            })
                        }), t.target.settings.isotope.columnWidth || (i = t.items.item(0).width()), e.destroy(), Y.Squarespace.GalleryManager._galleries.splice(s, 1))
                    }), c = null)
                }! function() {
                    var e = t.itemsParent.hasClass("sqs-gallery");
                    e && t.itemsParent.addClass("clear").setStyle("height", "auto"), r = parseFloat(r);
                    var s = ((i = (i + "").indexOf("%") > -1 ? i : parseFloat(i) / t.itemsParent.width() * 100 + "%") + "").indexOf("%") > -1 ? 100 / parseFloat(i) : (t.itemsParent.width() / parseFloat(i)).toFixed(),
                        c = -1 == (r + "").indexOf("%") ? parseFloat(r) / t.itemsParent.width() * 100 + "%" : r + "px";
                    t.itemsParent.append('<div style="width:' + c + '" class="gutter-sizer"></div>'), (i + "").indexOf("%") > -1 && c.indexOf("%") > -1 && (i = parseFloat(i) - (parseFloat(c) - parseFloat(c) / s) + "%"), t.items.each(function(s) {
                        e && s.setStyles({
                            maxWidth: i,
                            width: "100%",
                            height: null,
                            left: null,
                            top: null,
                            visibility: "visible"
                        }), t.config && t.config.imageAspectRatio && (s.one(".img-wrapper") ? s.one(".img-wrapper") && (s.one(".img-wrapper") && !o && s.one(".img-wrapper").setStyles({
                            paddingBottom: 100 / parseFloat(t.config.imageAspectRatio) + "%"
                        }), s.all("img").each(function(t) {
                            t.loader && t.fire("refresh"), !t.loader && t.plug(Y.Squarespace.Loader2, {
                                mode: "fill"
                            })
                        })) : s.one(".summary-thumbnail-container") && !o && s.one(".summary-thumbnail-container").setStyles({
                            paddingBottom: 100 / parseFloat(t.config.imageAspectRatio) + "%"
                        }))
                    });
                    var d = {};
                    for (var g in t.sortObj) t.sortObj.hasOwnProperty(g) && g.indexOf("_desc") > -1 && (d[g] = !1);
                    t.isotope_item_width = i, i = (i + "").indexOf("%") > -1 ? ".custom-filter-grid-item" : parseFloat(i), t.isotope = new Isotope(t.itemsParent.getDOMNode(), {
                        itemSelector: t.target.items,
                        transitionDuration: 0,
                        origTransitionDuration: n,
                        initLayout: !1,
                        layoutMode: t.target.settings.isotope && t.target.settings.isotope.layoutMode ? t.target.settings.isotope.layoutMode : o ? "masonry" : "fitRows",
                        percentPosition: !0,
                        stamp: t.target.settings.isotope && t.target.settings.isotope.stamp ? t.target.settings.isotope.stamp : ".stamp",
                        columnWidth: ".custom-filter-grid-item",
                        gutter: ".gutter-sizer",
                        fitWidth: !0,
                        fitRows: {
                            columnWidth: ".custom-filter-grid-item",
                            gutter: ".gutter-sizer"
                        },
                        masonry: {
                            columnWidth: ".custom-filter-grid-item",
                            gutter: ".gutter-sizer"
                        },
                        packery: {
                            columnWidth: ".custom-filter-grid-item",
                            gutter: ".gutter-sizer"
                        },
                        filter: function(e, i) {
                            var s = e || i,
                                a = !t.searchRegex || t.searchFunction(s).match(t.searchRegex),
                                r = !t.filter_selectors || Y.Selector.test(s, t.filter_selectors.trim().replace(/ /g, ","));
                            return a && r
                        },
                        sortAscending: l(d, {
                            popular: !1
                        }),
                        getSortData: t.sortObj
                    });
                    var h = a(function(e) {
                        t.itemsCount && t.itemsCount.one(".items-count").set("text", e.length), 0 === e.length ? t.container.addClass("custom-filter-no-result") : (t.container.removeClass("custom-filter-no-result"), t.itemsParent.all("img").each(function(t) {
                            t.hasClass("loaded") || t.width() && t.fire("refresh")
                        })), t.filterAnim = !1, t.waitingForNewItems = !1, t.advancedMap && t._filterAdvancedMapMarkers(), Y.fire("custom-filter:gallery-refresh"), t.container.fire && t.container.fire("custom-filter:gallery-refresh", {
                            customFilter: t
                        })
                    }, 70, !0);
                    if (t.isotope.on("arrangeComplete", h), t.isotope.once("layoutComplete", function(t) {
                            C && console.log("first layout"), t && t.length && t.forEach(function(t) {
                                t.element && (t.element.style.overflow = "hidden")
                            })
                        }), window.imagesLoaded) imagesLoaded(t.itemsParent.getDOMNode(), function(e) {
                        t._sortGrid()
                    });
                    else {
                        var m = t.itemsParent.all("img"),
                            u = 0,
                            p = m.size(),
                            f = !1;
                        p && m.on("load", function(e) {
                            ++u >= p && !f && (f = !0, t._sortGrid())
                        })
                    }
                    Y.once("domready", function() {
                        t._sortGrid()
                    }), C && console.log("isotope init"), t.filterAnim = !0, t._sortGrid(), Y.fire("custom-filter:isotope-inited", {
                        customFilter: t
                    }), t.container.fire && t.container.fire("custom-filter:isotope-inited", {
                        customFilter: t
                    })
                }()
            } else C && console.log("No filter library")
        },
        _addItemsAttributes: function(t, i) {
            if (this.coll_data && this.coll_data.collection && "events" == this.coll_data.collection.typeName && (this.coll_data.upcoming, this.coll_data.past), (this.coll_data || t) && (!this.coll_data || this.coll_data.items || t)) {
                var a = this,
                    r = function(t, e, i, r) {
                        !t.getAttribute("data-randomized") && t.setAttribute("data-index", i), a.target.settings.shuffle && t.setAttribute("data-randomized", !0), r && e && (t.attrsAdded = !0), e && (t._node._item_data = e), e.categories && e.categories.length && e.categories.forEach(function(t) {
                            -1 === a.currentCats.indexOf(t) && a.currentCats.push(t)
                        }), e.tags && e.tags.length && e.tags.forEach(function(t) {
                            -1 === a.currentTags.indexOf(t) && a.currentTags.push(t)
                        }), e.categories || (e.categories = []), e.tags || (e.tags = []), e.categories && -1 === e.categories.indexOf("all") && e.categories.push("all"), e.tags && -1 === e.tags.indexOf("all") && e.tags.push("all");
                        var n = e.categories.length,
                            o = e.tags.length,
                            l = [],
                            c = [];
                        if (n)
                            for (var d = n - 1; d >= 0; d--) l.push("category-" + s(e.categories[d]));
                        if (l.length && l.forEach(function(e) {
                                t._node.className.indexOf(e) < 0 && t.addClass(e)
                            }), o)
                            for (var g = o - 1; g >= 0; g--) c.push("tag-" + s(e.tags[g]));
                        if (c.length && c.forEach(function(e) {
                                t._node.className.indexOf(e) < 0 && t.addClass(e)
                            }), e.hasOwnProperty("likeCount") && t.setAttribute("data-like-count", e.likeCount), e.publishOn && t.setAttribute("data-publish-on", e.publishOn), e.price) {
                            var h = parseInt((e.price + "").replace(/[^\d]/g, ""));
                            t.setAttribute("data-price", h), -1 === a.items_prices.indexOf(h) && a.items_prices.push(h)
                        }
                        if (e.variants && e.variants.length) {
                            var m = [];
                            e.variants.forEach(function(t) {
                                var e = t.onSale ? t.salePrice : t.price; - 1 === m.indexOf(e) && m.push(e)
                            }), m.sort(function(t, e) {
                                return t - e
                            }), t.setAttribute("data-price", m[0])
                        }
                        if (a.getFilterAttrObj && Y.Object.keys(a.getFilterAttrObj).length)
                            for (var u in a.getFilterAttrObj)
                                if (a.getFilterAttrObj.hasOwnProperty(u)) {
                                    var p, f = a.getFilterAttrObj[u].attr;
                                    if ("function" == typeof f) {
                                        var v = a.getFilterAttrObj[u].variantOption;
                                        p = v ? f(e, v) : f(t, e)
                                    } else {
                                        var b = (f = f.split("|"))[0],
                                            w = f[1] || !1,
                                            _ = f[2] || !1;
                                        if (e[b]) {
                                            if (p = e[b], w) try {
                                                var y = Y.Node.create(p);
                                                y && y.one(w) && (p = (y.one(w).get("textContent") || y.one(w).get("innerText")).replace(/\r?\n|\r/g, "").trim(), _ && (p = y.one(w).get(_).replace(/\r?\n|\r/g, "").trim()))
                                            } catch (t) {
                                                C && console.log(t)
                                            }
                                        } else {
                                            try {
                                                p = !!t.one(b) && (t.one(b).get("textContent") || t.one(b).get("innerText")).replace(/\r?\n|\r/g, "").trim().split(",")
                                            } catch (t) {
                                                C && console.log(t)
                                            }!1 === p && e.categories && (p = e.categories)
                                        }
                                    }
                                    p ? "object" != typeof p && (p = [p]) : p = [];
                                    var F = "";
                                    p && -1 === p.indexOf("all") && p.push("all"), a.getFilterAttrObj[u].defaultAttrs && (0 === p.length || 1 === p.length && "all" === p[0]) && a.getFilterAttrObj[u].defaultAttrs.split("|").forEach(function(t) {
                                        t = s(t), -1 === p.indexOf(t) && p.push(t)
                                    });
                                    var O = p.length;
                                    if (O)
                                        for (var k = 0; k < O; k++)
                                            if (p[k] = (p[k] + "").trim(), a.getFilterAttrObj[u].lowercase && (p[k] = function(t) {
                                                    return t.charAt(0).toUpperCase() + t.slice(1)
                                                }(p[k])), p[k]) {
                                                if (("all" == p[k] || a.getFilterAttrObj[u].allowedOptions.length && a.getFilterAttrObj[u].allowedOptions.indexOf(p[k]) > -1 || !a.getFilterAttrObj[u].allowedOptions.length) && (F += " " + u + "-" + s(p[k])), a.getFilterAttrObj[u].allowedPrefSuf) {
                                                    var x = new RegExp(a.getFilterAttrObj[u].allowedPrefSuf, "gi");
                                                    p[k] = p[k].replace(x, "").trim()
                                                }(a.getFilterAttrObj[u].currentOptions.indexOf(p[k]) < 0 && a.getFilterAttrObj[u].allowedOptions.length && a.getFilterAttrObj[u].allowedOptions.indexOf(p[k]) > -1 || a.getFilterAttrObj[u].currentOptions.indexOf(p[k]) < 0 && !a.getFilterAttrObj[u].allowedOptions.length) && ("all" === p[k] || a.getFilterAttrObj[u].disableOptionsUpdate || a.getFilterAttrObj[u].currentOptions.push(p[k]))
                                            }
                                    F && (F = F.trim().split(" ")).forEach(function(e) {
                                        t.addClass(e)
                                    })
                                }
                        var A = [];
                        for (var S in a.sortObj)
                            if (a.sortObj.hasOwnProperty(S)) {
                                var P = S.replace("_desc", "").replace("_asc", ""); - 1 === A.indexOf(P) && (A.push(P), "function" == typeof a.sortObj[S] && (t.setAttribute("data-" + P, a.sortObj[S](t._node, e)), t._node.itemData = e))
                            }
                        a.isotope && a.isotope.updateSortData()
                    },
                    n = !1,
                    o = !1;
                if (i && i.size() && (n = !0, o = a.items, a.items.size() && a.items.size() !== i.size() ? (a.items = new Y.NodeList(i._nodes), a.target.settings.shuffle && (a.items._nodes = e(a.items._nodes))) : a.items = new Y.NodeList(i._nodes)), t) a.items.each(function(t, e) {
                    var i = "",
                        s = "";
                    t.one(".summary-metadata-item--cats") ? i = (t.one(".summary-metadata-item--cats").get("textContent") || t.one(".summary-metadata-item--cats").get("innerText")).replace(/\r?\n|\r/g, "").trim().split(", ") : t.one(".Blog-meta-item--categories") ? i = (t.one(".Blog-meta-item--categories").get("textContent") || t.one(".Blog-meta-item--categories").get("innerText")).replace(/\r?\n|\r/g, "").trim().split(", ") : t.one(".entry-category") && (i = (t.one(".entry-category").get("textContent") || t.one(".entry-category").get("innerText")).replace(/\r?\n|\r/g, "").trim().split(", ")), t.one(".summary-metadata-item--tags") ? s = (t.one(".summary-metadata-item--tags").get("textContent") || t.one(".summary-metadata-item--tags").get("innerText")).replace(/\r?\n|\r/g, "").trim().split(", ") : t.one(".Blog-meta-item--tags") ? s = (t.one(".Blog-meta-item--tags").get("textContent") || t.one(".Blog-meta-item--tags").get("innerText")).replace(/\r?\n|\r/g, "").trim().split(", ") : t.one(".entry-tags") && (s = (t.one(".entry-tags").get("textContent") || t.one(".entry-tags").get("innerText")).replace(/\r?\n|\r/g, "").trim().split(", "));
                    var a = {
                        categories: i,
                        tags: s,
                        price: t.one(".sqs-money-native") ? parseFloat(t.one(".sqs-money-native").get("textContent").replace(/\D/g, "")) : 0,
                        publishOn: t.one("time") ? new Date(t.one("time").get("innerText")).getTime() : "",
                        likeCount: t.one(".like-count") ? t.one(".like-count").get("innerText") : 0
                    };
                    r(t, a, e)
                });
                else {
                    var l = this.coll_data.collection && this.coll_data.collection.collections ? this.coll_data.collection.collections : this.coll_data.items;
                    l && l.length && this.items && this.items.size() && (this.requestComplete, this.items && this.items.size() && this.items.item(this.items.size() - 1)._node._LZSData ? a.items.each(function(t, e) {
                        t._node._LZSData && r(t, t._node._LZSData, e, "direct LZS logic")
                    }) : this.items.item(0).hasAttribute("data-item-id") ? l.forEach(function(t, e) {
                        var i = a.items.filter('[data-item-id="' + t.id + '"]');
                        i && 1 == i.size() && r(i.item(0), t, e, "Data Item Id")
                    }) : this.items.item(0).hasClass("summary-item") || this.items.item(0).hasAttribute("data-id") || !this.items.item(0).hasAttribute("data-item-id") ? l.forEach(function(t, e) {
                        var i = t.fullUrl,
                            s = t.id,
                            n = t.mainImage ? t.mainImage.assetUrl : t.assetUrl,
                            o = t.title.trim(),
                            l = a.container.one(a.target.items) ? a.container : a.items.toFrag(),
                            c = l.one('[data-id="' + s + '"]'),
                            d = !!l.one('[data-src="' + n + '"]') && l.one('[data-src="' + n + '"]').ancestor(a.target.items),
                            g = !(!o || !l.one('[data-title="' + o + '"]')) && l.one('[data-title="' + o + '"]').ancestor(a.target.items),
                            h = !!(o && i && l.one('.summary-title-link[href="' + i + '"]') && l.one('.summary-title-link[href="' + i + '"]').get("textContent").replace(/\r?\n|\r/g, "").trim() === o) && l.one('.summary-title-link[href="' + i + '"]').ancestor(a.target.items);
                        c ? !c.attrsAdded && r(c, t, e, "id logic") : d ? !d.attrsAdded && r(d, t, e, "asset logic") : h ? !h.attrsAdded && r(h, t, e, "title&href logic") : g && !g.attrsAdded && r(g, t, e, "title logic")
                    }) : l.forEach(function(t, e) {
                        var i = a.container.one('.hentry[data-item-id="' + t.id + '"]') || a.container.one(a.target.items + '[href="' + t.fullUrl + '"]');
                        i && r(i, t, e)
                    })), a.requestComplete = !0
                }
                this._addMarkersInstancesToItems(), n && o && (a.items = o), this.container.fire && this.container.fire("custom-filter:attributes-added", {
                    customFilter: a
                }), Y.fire("custom-filter:attributes-added", {
                    customFilter: a
                })
            }
        },
        _buildDropdowns: function() {
            this.coll_data || (this.coll_data = {
                collection: {}
            });
            var t, e, a, r = this;
            if ((this.currentTags.length || this.currentCats.length) && this.coll_data.collection && ((!this.coll_data.collection.categories || this.coll_data.collection.categories.length < this.currentCats.length - 1) && (this.coll_data.collection.categories = this.currentCats), (!this.coll_data.collection.tags || this.coll_data.collection.tags.length < this.currentTags.length - 1) && (this.coll_data.collection.tags = this.currentTags)), r.getFilterAttrObj && Y.Object.keys(r.getFilterAttrObj).length)
                for (var n in r.getFilterAttrObj)
                    if (r.getFilterAttrObj.hasOwnProperty(n) && r.getFilterAttrObj[n].container) {
                        var o = r.getFilterAttrObj[n].container,
                            l = r.getFilterAttrObj[n].currentOptions;
                        if (r.queryParams && (r.queryParams.category && r.getFilterAttrObj[n].attr, r.queryParams.tag && r.getFilterAttrObj[n].attr), "desc" === r.getFilterAttrObj[n].sort ? l.sort(i) && l.reverse() : "asAllowed" === r.getFilterAttrObj[n].sort && r.getFilterAttrObj[n].allowedHash ? l.sort(function(t, e) {
                                return r.getFilterAttrObj[n].allowedHash[t] - r.getFilterAttrObj[n].allowedHash[e]
                            }) : "asOptions" === r.getFilterAttrObj[n].sort || "no-sort" === r.getFilterAttrObj[n].sort || l.sort(i), t = o.one("ul"), e = t.all(".archive-group-name-link.active"), a = [], e && e.size() && e.each(function(t) {
                                a.push(t.getAttribute("data-filter-val"))
                            }), t.empty(), r.filterSelectors || (r.filterSelectors = {}), l && l.length > 0) {
                            var c = new Y.NodeList;
                            l.forEach(function(t) {
                                var e = t.trim() || "Set-name-here",
                                    i = s(e);
                                e === r.getFilterAttrObj[n].allOption && (i = "all");
                                var l = a.indexOf(i) > -1 ? " active" : "";
                                o.one('[data-filter-val="' + i + '"]') || c.push(Y.Node.create('<li class="archive-group"><a href="?' + n + "=" + encodeURIComponent(e) + '" data-filter-val="' + i + '" data-filter="' + n + '" class="archive-group-name-link' + l + '">' + e + "</a>")), r.filterSelectors.hasOwnProperty(n + "-" + i) || (r.filterSelectors[n + "-" + i] = [])
                            }), t && t.append(c).setAttribute("data-items-count", c.size()), o.show(), o.removeClass("first")
                        } else null !== r.requestComplete && !0 !== r.requestComplete || o.hide(), r.customFiltersWrapper.one(".sqs-block:not([hidden]):not(.items-count-wrapper)") && r.customFiltersWrapper.one(".sqs-block:not([hidden]):not(.items-count-wrapper)").addClass("first")
                    }
            this.container.fire && this.container.fire("custom-filter:cats-tags-filters-built", {
                customFilter: r
            }), Y.fire("custom-filter:cats-tags-filters-built", {
                customFilter: r
            }), this.target.settings.updateFilterOptions && this._updateFilterOptions()
        },
        _destroy: function() {
            this.isotope && this.isotope.destroy(), this.container.removeClass("custom-filter-container").removeClass("isotope-filter-used"), this.customFiltersWrapper && this.customFiltersWrapper.remove(), this.container.one(".item-filter-loaded") && this.container.all(".item-filter-loaded").remove()
        }
    }, window.CustomSQSFilter ? console.log("Seems Universal Filter was already started.") : function() {
        window.CustomSQSFilter = g, window.Squarespace.onInitialize(Y, function() {
            h(),
                function(t) {
                    var e = (t = t || window).document.body;
                    if (!t.SQSLayoutObserver && e) {
                        var i = a(function(t) {
                            Y.Global.fire("SQSLayout:edit", {
                                context: t
                            })
                        }, 2e3, !1);
                        t.SQSLayoutObserver = new MutationObserver(function(e) {
                            e.forEach(function(e) {
                                e.type && "attributes" == e.type && "class" === e.attributeName && e.target.className && e.target.className.length && (e.target.className.indexOf("sqs-layout-rendering") > -1 || e.target.className.indexOf("sqs-editing") > -1) && i(t)
                            })
                        }), t.SQSLayoutObserver.observe(e, {
                            childList: !0,
                            subtree: !0,
                            attributes: !0
                        })
                    }
                }(window), window._scrollBarWidth = window.innerWidth && document.body && document.body.offsetWidth ? window.innerWidth - document.body.offsetWidth : 0
        }), Y.Global.after("SQSLayout:edit", h), Y.config.win.Squarespace.onDestroy(Y, function() {
            v && v.length && v.forEach(function(t) {
                t._destroy()
            }), p && (window.clearInterval(p), p = null), v = [], f && (f.detach(), f = null), window.removeEventListener("resize", o), C && console.log("destroy")
        })
    }()
}();
